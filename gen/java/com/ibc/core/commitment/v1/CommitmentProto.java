// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ibc/core/commitment/v1/commitment.proto

package com.ibc.core.commitment.v1;

public final class CommitmentProto {
  private CommitmentProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MerkleRootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ibc.core.commitment.v1.MerkleRoot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes hash = 1 [json_name = "hash"];</code>
     * @return The hash.
     */
    com.google.protobuf.ByteString getHash();
  }
  /**
   * <pre>
   * MerkleRoot defines a merkle root hash.
   * In the Cosmos SDK, the AppHash of a block header becomes the root.
   * </pre>
   *
   * Protobuf type {@code ibc.core.commitment.v1.MerkleRoot}
   */
  public static final class MerkleRoot extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ibc.core.commitment.v1.MerkleRoot)
      MerkleRootOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MerkleRoot.newBuilder() to construct.
    private MerkleRoot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MerkleRoot() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MerkleRoot();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleRoot_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleRoot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot.class, com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot.Builder.class);
    }

    public static final int HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes hash = 1 [json_name = "hash"];</code>
     * @return The hash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!hash_.isEmpty()) {
        output.writeBytes(1, hash_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, hash_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot)) {
        return super.equals(obj);
      }
      com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot other = (com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot) obj;

      if (!getHash()
          .equals(other.getHash())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MerkleRoot defines a merkle root hash.
     * In the Cosmos SDK, the AppHash of a block header becomes the root.
     * </pre>
     *
     * Protobuf type {@code ibc.core.commitment.v1.MerkleRoot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ibc.core.commitment.v1.MerkleRoot)
        com.ibc.core.commitment.v1.CommitmentProto.MerkleRootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleRoot_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleRoot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot.class, com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot.Builder.class);
      }

      // Construct using com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        hash_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleRoot_descriptor;
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot getDefaultInstanceForType() {
        return com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot.getDefaultInstance();
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot build() {
        com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot buildPartial() {
        com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot result = new com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.hash_ = hash_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot) {
          return mergeFrom((com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot other) {
        if (other == com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot.getDefaultInstance()) return this;
        if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
          setHash(other.getHash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                hash_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes hash = 1 [json_name = "hash"];</code>
       * @return The hash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <code>bytes hash = 1 [json_name = "hash"];</code>
       * @param value The hash to set.
       * @return This builder for chaining.
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        hash_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bytes hash = 1 [json_name = "hash"];</code>
       * @return This builder for chaining.
       */
      public Builder clearHash() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ibc.core.commitment.v1.MerkleRoot)
    }

    // @@protoc_insertion_point(class_scope:ibc.core.commitment.v1.MerkleRoot)
    private static final com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot();
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MerkleRoot>
        PARSER = new com.google.protobuf.AbstractParser<MerkleRoot>() {
      @java.lang.Override
      public MerkleRoot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MerkleRoot> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MerkleRoot> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.ibc.core.commitment.v1.CommitmentProto.MerkleRoot getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MerklePrefixOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ibc.core.commitment.v1.MerklePrefix)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes key_prefix = 1 [json_name = "keyPrefix"];</code>
     * @return The keyPrefix.
     */
    com.google.protobuf.ByteString getKeyPrefix();
  }
  /**
   * <pre>
   * MerklePrefix is merkle path prefixed to the key.
   * The constructed key from the Path and the key will be append(Path.KeyPath,
   * append(Path.KeyPrefix, key...))
   * </pre>
   *
   * Protobuf type {@code ibc.core.commitment.v1.MerklePrefix}
   */
  public static final class MerklePrefix extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ibc.core.commitment.v1.MerklePrefix)
      MerklePrefixOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MerklePrefix.newBuilder() to construct.
    private MerklePrefix(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MerklePrefix() {
      keyPrefix_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MerklePrefix();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerklePrefix_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerklePrefix_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix.class, com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix.Builder.class);
    }

    public static final int KEY_PREFIX_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString keyPrefix_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes key_prefix = 1 [json_name = "keyPrefix"];</code>
     * @return The keyPrefix.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyPrefix() {
      return keyPrefix_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!keyPrefix_.isEmpty()) {
        output.writeBytes(1, keyPrefix_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!keyPrefix_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, keyPrefix_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix)) {
        return super.equals(obj);
      }
      com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix other = (com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix) obj;

      if (!getKeyPrefix()
          .equals(other.getKeyPrefix())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_PREFIX_FIELD_NUMBER;
      hash = (53 * hash) + getKeyPrefix().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MerklePrefix is merkle path prefixed to the key.
     * The constructed key from the Path and the key will be append(Path.KeyPath,
     * append(Path.KeyPrefix, key...))
     * </pre>
     *
     * Protobuf type {@code ibc.core.commitment.v1.MerklePrefix}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ibc.core.commitment.v1.MerklePrefix)
        com.ibc.core.commitment.v1.CommitmentProto.MerklePrefixOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerklePrefix_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerklePrefix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix.class, com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix.Builder.class);
      }

      // Construct using com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keyPrefix_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerklePrefix_descriptor;
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix getDefaultInstanceForType() {
        return com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix.getDefaultInstance();
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix build() {
        com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix buildPartial() {
        com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix result = new com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keyPrefix_ = keyPrefix_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix) {
          return mergeFrom((com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix other) {
        if (other == com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix.getDefaultInstance()) return this;
        if (other.getKeyPrefix() != com.google.protobuf.ByteString.EMPTY) {
          setKeyPrefix(other.getKeyPrefix());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                keyPrefix_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString keyPrefix_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes key_prefix = 1 [json_name = "keyPrefix"];</code>
       * @return The keyPrefix.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKeyPrefix() {
        return keyPrefix_;
      }
      /**
       * <code>bytes key_prefix = 1 [json_name = "keyPrefix"];</code>
       * @param value The keyPrefix to set.
       * @return This builder for chaining.
       */
      public Builder setKeyPrefix(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        keyPrefix_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bytes key_prefix = 1 [json_name = "keyPrefix"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyPrefix() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyPrefix_ = getDefaultInstance().getKeyPrefix();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ibc.core.commitment.v1.MerklePrefix)
    }

    // @@protoc_insertion_point(class_scope:ibc.core.commitment.v1.MerklePrefix)
    private static final com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix();
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MerklePrefix>
        PARSER = new com.google.protobuf.AbstractParser<MerklePrefix>() {
      @java.lang.Override
      public MerklePrefix parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MerklePrefix> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MerklePrefix> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.ibc.core.commitment.v1.CommitmentProto.MerklePrefix getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MerkleProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ibc.core.commitment.v1.MerkleProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    java.util.List<com.cosmos.ics23.v1.ProofsProto.CommitmentProof> 
        getProofsList();
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    com.cosmos.ics23.v1.ProofsProto.CommitmentProof getProofs(int index);
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    int getProofsCount();
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    java.util.List<? extends com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder> 
        getProofsOrBuilderList();
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder getProofsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * MerkleProof is a wrapper type over a chain of CommitmentProofs.
   * It demonstrates membership or non-membership for an element or set of
   * elements, verifiable in conjunction with a known commitment root. Proofs
   * should be succinct.
   * MerkleProofs are ordered from leaf-to-root
   * </pre>
   *
   * Protobuf type {@code ibc.core.commitment.v1.MerkleProof}
   */
  public static final class MerkleProof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ibc.core.commitment.v1.MerkleProof)
      MerkleProofOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MerkleProof.newBuilder() to construct.
    private MerkleProof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MerkleProof() {
      proofs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MerkleProof();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleProof_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ibc.core.commitment.v1.CommitmentProto.MerkleProof.class, com.ibc.core.commitment.v1.CommitmentProto.MerkleProof.Builder.class);
    }

    public static final int PROOFS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.cosmos.ics23.v1.ProofsProto.CommitmentProof> proofs_;
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    @java.lang.Override
    public java.util.List<com.cosmos.ics23.v1.ProofsProto.CommitmentProof> getProofsList() {
      return proofs_;
    }
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder> 
        getProofsOrBuilderList() {
      return proofs_;
    }
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    @java.lang.Override
    public int getProofsCount() {
      return proofs_.size();
    }
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    @java.lang.Override
    public com.cosmos.ics23.v1.ProofsProto.CommitmentProof getProofs(int index) {
      return proofs_.get(index);
    }
    /**
     * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
     */
    @java.lang.Override
    public com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder getProofsOrBuilder(
        int index) {
      return proofs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < proofs_.size(); i++) {
        output.writeMessage(1, proofs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < proofs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, proofs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ibc.core.commitment.v1.CommitmentProto.MerkleProof)) {
        return super.equals(obj);
      }
      com.ibc.core.commitment.v1.CommitmentProto.MerkleProof other = (com.ibc.core.commitment.v1.CommitmentProto.MerkleProof) obj;

      if (!getProofsList()
          .equals(other.getProofsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getProofsCount() > 0) {
        hash = (37 * hash) + PROOFS_FIELD_NUMBER;
        hash = (53 * hash) + getProofsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ibc.core.commitment.v1.CommitmentProto.MerkleProof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MerkleProof is a wrapper type over a chain of CommitmentProofs.
     * It demonstrates membership or non-membership for an element or set of
     * elements, verifiable in conjunction with a known commitment root. Proofs
     * should be succinct.
     * MerkleProofs are ordered from leaf-to-root
     * </pre>
     *
     * Protobuf type {@code ibc.core.commitment.v1.MerkleProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ibc.core.commitment.v1.MerkleProof)
        com.ibc.core.commitment.v1.CommitmentProto.MerkleProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleProof_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ibc.core.commitment.v1.CommitmentProto.MerkleProof.class, com.ibc.core.commitment.v1.CommitmentProto.MerkleProof.Builder.class);
      }

      // Construct using com.ibc.core.commitment.v1.CommitmentProto.MerkleProof.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (proofsBuilder_ == null) {
          proofs_ = java.util.Collections.emptyList();
        } else {
          proofs_ = null;
          proofsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ibc.core.commitment.v1.CommitmentProto.internal_static_ibc_core_commitment_v1_MerkleProof_descriptor;
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerkleProof getDefaultInstanceForType() {
        return com.ibc.core.commitment.v1.CommitmentProto.MerkleProof.getDefaultInstance();
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerkleProof build() {
        com.ibc.core.commitment.v1.CommitmentProto.MerkleProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.ibc.core.commitment.v1.CommitmentProto.MerkleProof buildPartial() {
        com.ibc.core.commitment.v1.CommitmentProto.MerkleProof result = new com.ibc.core.commitment.v1.CommitmentProto.MerkleProof(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.ibc.core.commitment.v1.CommitmentProto.MerkleProof result) {
        if (proofsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            proofs_ = java.util.Collections.unmodifiableList(proofs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.proofs_ = proofs_;
        } else {
          result.proofs_ = proofsBuilder_.build();
        }
      }

      private void buildPartial0(com.ibc.core.commitment.v1.CommitmentProto.MerkleProof result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ibc.core.commitment.v1.CommitmentProto.MerkleProof) {
          return mergeFrom((com.ibc.core.commitment.v1.CommitmentProto.MerkleProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ibc.core.commitment.v1.CommitmentProto.MerkleProof other) {
        if (other == com.ibc.core.commitment.v1.CommitmentProto.MerkleProof.getDefaultInstance()) return this;
        if (proofsBuilder_ == null) {
          if (!other.proofs_.isEmpty()) {
            if (proofs_.isEmpty()) {
              proofs_ = other.proofs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureProofsIsMutable();
              proofs_.addAll(other.proofs_);
            }
            onChanged();
          }
        } else {
          if (!other.proofs_.isEmpty()) {
            if (proofsBuilder_.isEmpty()) {
              proofsBuilder_.dispose();
              proofsBuilder_ = null;
              proofs_ = other.proofs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              proofsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getProofsFieldBuilder() : null;
            } else {
              proofsBuilder_.addAllMessages(other.proofs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.cosmos.ics23.v1.ProofsProto.CommitmentProof m =
                    input.readMessage(
                        com.cosmos.ics23.v1.ProofsProto.CommitmentProof.parser(),
                        extensionRegistry);
                if (proofsBuilder_ == null) {
                  ensureProofsIsMutable();
                  proofs_.add(m);
                } else {
                  proofsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cosmos.ics23.v1.ProofsProto.CommitmentProof> proofs_ =
        java.util.Collections.emptyList();
      private void ensureProofsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          proofs_ = new java.util.ArrayList<com.cosmos.ics23.v1.ProofsProto.CommitmentProof>(proofs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.ics23.v1.ProofsProto.CommitmentProof, com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder, com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder> proofsBuilder_;

      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public java.util.List<com.cosmos.ics23.v1.ProofsProto.CommitmentProof> getProofsList() {
        if (proofsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(proofs_);
        } else {
          return proofsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public int getProofsCount() {
        if (proofsBuilder_ == null) {
          return proofs_.size();
        } else {
          return proofsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public com.cosmos.ics23.v1.ProofsProto.CommitmentProof getProofs(int index) {
        if (proofsBuilder_ == null) {
          return proofs_.get(index);
        } else {
          return proofsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder setProofs(
          int index, com.cosmos.ics23.v1.ProofsProto.CommitmentProof value) {
        if (proofsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProofsIsMutable();
          proofs_.set(index, value);
          onChanged();
        } else {
          proofsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder setProofs(
          int index, com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder builderForValue) {
        if (proofsBuilder_ == null) {
          ensureProofsIsMutable();
          proofs_.set(index, builderForValue.build());
          onChanged();
        } else {
          proofsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder addProofs(com.cosmos.ics23.v1.ProofsProto.CommitmentProof value) {
        if (proofsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProofsIsMutable();
          proofs_.add(value);
          onChanged();
        } else {
          proofsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder addProofs(
          int index, com.cosmos.ics23.v1.ProofsProto.CommitmentProof value) {
        if (proofsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProofsIsMutable();
          proofs_.add(index, value);
          onChanged();
        } else {
          proofsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder addProofs(
          com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder builderForValue) {
        if (proofsBuilder_ == null) {
          ensureProofsIsMutable();
          proofs_.add(builderForValue.build());
          onChanged();
        } else {
          proofsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder addProofs(
          int index, com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder builderForValue) {
        if (proofsBuilder_ == null) {
          ensureProofsIsMutable();
          proofs_.add(index, builderForValue.build());
          onChanged();
        } else {
          proofsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder addAllProofs(
          java.lang.Iterable<? extends com.cosmos.ics23.v1.ProofsProto.CommitmentProof> values) {
        if (proofsBuilder_ == null) {
          ensureProofsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, proofs_);
          onChanged();
        } else {
          proofsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder clearProofs() {
        if (proofsBuilder_ == null) {
          proofs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          proofsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public Builder removeProofs(int index) {
        if (proofsBuilder_ == null) {
          ensureProofsIsMutable();
          proofs_.remove(index);
          onChanged();
        } else {
          proofsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder getProofsBuilder(
          int index) {
        return getProofsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder getProofsOrBuilder(
          int index) {
        if (proofsBuilder_ == null) {
          return proofs_.get(index);  } else {
          return proofsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public java.util.List<? extends com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder> 
           getProofsOrBuilderList() {
        if (proofsBuilder_ != null) {
          return proofsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(proofs_);
        }
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder addProofsBuilder() {
        return getProofsFieldBuilder().addBuilder(
            com.cosmos.ics23.v1.ProofsProto.CommitmentProof.getDefaultInstance());
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder addProofsBuilder(
          int index) {
        return getProofsFieldBuilder().addBuilder(
            index, com.cosmos.ics23.v1.ProofsProto.CommitmentProof.getDefaultInstance());
      }
      /**
       * <code>repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];</code>
       */
      public java.util.List<com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder> 
           getProofsBuilderList() {
        return getProofsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cosmos.ics23.v1.ProofsProto.CommitmentProof, com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder, com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder> 
          getProofsFieldBuilder() {
        if (proofsBuilder_ == null) {
          proofsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cosmos.ics23.v1.ProofsProto.CommitmentProof, com.cosmos.ics23.v1.ProofsProto.CommitmentProof.Builder, com.cosmos.ics23.v1.ProofsProto.CommitmentProofOrBuilder>(
                  proofs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          proofs_ = null;
        }
        return proofsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ibc.core.commitment.v1.MerkleProof)
    }

    // @@protoc_insertion_point(class_scope:ibc.core.commitment.v1.MerkleProof)
    private static final com.ibc.core.commitment.v1.CommitmentProto.MerkleProof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ibc.core.commitment.v1.CommitmentProto.MerkleProof();
    }

    public static com.ibc.core.commitment.v1.CommitmentProto.MerkleProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MerkleProof>
        PARSER = new com.google.protobuf.AbstractParser<MerkleProof>() {
      @java.lang.Override
      public MerkleProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MerkleProof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MerkleProof> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.ibc.core.commitment.v1.CommitmentProto.MerkleProof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ibc_core_commitment_v1_MerkleRoot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ibc_core_commitment_v1_MerkleRoot_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ibc_core_commitment_v1_MerklePrefix_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ibc_core_commitment_v1_MerklePrefix_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ibc_core_commitment_v1_MerkleProof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ibc_core_commitment_v1_MerkleProof_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'ibc/core/commitment/v1/commitment.prot" +
      "o\022\026ibc.core.commitment.v1\032\024gogoproto/gog" +
      "o.proto\032\034cosmos/ics23/v1/proofs.proto\"&\n" +
      "\nMerkleRoot\022\022\n\004hash\030\001 \001(\014R\004hash:\004\210\240\037\000\"-\n" +
      "\014MerklePrefix\022\035\n\nkey_prefix\030\001 \001(\014R\tkeyPr" +
      "efix\"G\n\013MerkleProof\0228\n\006proofs\030\001 \003(\0132 .co" +
      "smos.ics23.v1.CommitmentProofR\006proofsB\345\001" +
      "\n\032com.ibc.core.commitment.v1B\017Commitment" +
      "ProtoZ=github.com/cosmos/ibc-go/v10/modu" +
      "les/core/23-commitment/types\242\002\003ICC\252\002\026Ibc" +
      ".Core.Commitment.V1\312\002\026Ibc\\Core\\Commitmen" +
      "t\\V1\342\002\"Ibc\\Core\\Commitment\\V1\\GPBMetadat" +
      "a\352\002\031Ibc::Core::Commitment::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos.ics23.v1.ProofsProto.getDescriptor(),
        });
    internal_static_ibc_core_commitment_v1_MerkleRoot_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ibc_core_commitment_v1_MerkleRoot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ibc_core_commitment_v1_MerkleRoot_descriptor,
        new java.lang.String[] { "Hash", });
    internal_static_ibc_core_commitment_v1_MerklePrefix_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ibc_core_commitment_v1_MerklePrefix_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ibc_core_commitment_v1_MerklePrefix_descriptor,
        new java.lang.String[] { "KeyPrefix", });
    internal_static_ibc_core_commitment_v1_MerkleProof_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ibc_core_commitment_v1_MerkleProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ibc_core_commitment_v1_MerkleProof_descriptor,
        new java.lang.String[] { "Proofs", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos.ics23.v1.ProofsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
