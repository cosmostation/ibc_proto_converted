// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: atomone/feemarket/v1/genesis.proto

package com.atomone.feemarket.v1;

public final class GenesisProto {
  private GenesisProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GenesisStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:atomone.feemarket.v1.GenesisState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Params are the parameters for the feemarket module. These parameters
     * can be utilized to implement both the base EIP-1559 fee market and
     * and the AIMD EIP-1559 fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    boolean hasParams();
    /**
     * <pre>
     * Params are the parameters for the feemarket module. These parameters
     * can be utilized to implement both the base EIP-1559 fee market and
     * and the AIMD EIP-1559 fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    com.atomone.feemarket.v1.ParamsProto.Params getParams();
    /**
     * <pre>
     * Params are the parameters for the feemarket module. These parameters
     * can be utilized to implement both the base EIP-1559 fee market and
     * and the AIMD EIP-1559 fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    com.atomone.feemarket.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder();

    /**
     * <pre>
     * State contains the current state of the AIMD fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
     * @return Whether the state field is set.
     */
    boolean hasState();
    /**
     * <pre>
     * State contains the current state of the AIMD fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
     * @return The state.
     */
    com.atomone.feemarket.v1.GenesisProto.State getState();
    /**
     * <pre>
     * State contains the current state of the AIMD fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
     */
    com.atomone.feemarket.v1.GenesisProto.StateOrBuilder getStateOrBuilder();
  }
  /**
   * <pre>
   * GenesisState defines the feemarket module's genesis state.
   * </pre>
   *
   * Protobuf type {@code atomone.feemarket.v1.GenesisState}
   */
  public static final class GenesisState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:atomone.feemarket.v1.GenesisState)
      GenesisStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GenesisState.newBuilder() to construct.
    private GenesisState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GenesisState() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GenesisState();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_GenesisState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.atomone.feemarket.v1.GenesisProto.GenesisState.class, com.atomone.feemarket.v1.GenesisProto.GenesisState.Builder.class);
    }

    public static final int PARAMS_FIELD_NUMBER = 1;
    private com.atomone.feemarket.v1.ParamsProto.Params params_;
    /**
     * <pre>
     * Params are the parameters for the feemarket module. These parameters
     * can be utilized to implement both the base EIP-1559 fee market and
     * and the AIMD EIP-1559 fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    @java.lang.Override
    public boolean hasParams() {
      return params_ != null;
    }
    /**
     * <pre>
     * Params are the parameters for the feemarket module. These parameters
     * can be utilized to implement both the base EIP-1559 fee market and
     * and the AIMD EIP-1559 fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    @java.lang.Override
    public com.atomone.feemarket.v1.ParamsProto.Params getParams() {
      return params_ == null ? com.atomone.feemarket.v1.ParamsProto.Params.getDefaultInstance() : params_;
    }
    /**
     * <pre>
     * Params are the parameters for the feemarket module. These parameters
     * can be utilized to implement both the base EIP-1559 fee market and
     * and the AIMD EIP-1559 fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.atomone.feemarket.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder() {
      return params_ == null ? com.atomone.feemarket.v1.ParamsProto.Params.getDefaultInstance() : params_;
    }

    public static final int STATE_FIELD_NUMBER = 2;
    private com.atomone.feemarket.v1.GenesisProto.State state_;
    /**
     * <pre>
     * State contains the current state of the AIMD fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override
    public boolean hasState() {
      return state_ != null;
    }
    /**
     * <pre>
     * State contains the current state of the AIMD fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
     * @return The state.
     */
    @java.lang.Override
    public com.atomone.feemarket.v1.GenesisProto.State getState() {
      return state_ == null ? com.atomone.feemarket.v1.GenesisProto.State.getDefaultInstance() : state_;
    }
    /**
     * <pre>
     * State contains the current state of the AIMD fee market.
     * </pre>
     *
     * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public com.atomone.feemarket.v1.GenesisProto.StateOrBuilder getStateOrBuilder() {
      return state_ == null ? com.atomone.feemarket.v1.GenesisProto.State.getDefaultInstance() : state_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (params_ != null) {
        output.writeMessage(1, getParams());
      }
      if (state_ != null) {
        output.writeMessage(2, getState());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (params_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getParams());
      }
      if (state_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getState());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.atomone.feemarket.v1.GenesisProto.GenesisState)) {
        return super.equals(obj);
      }
      com.atomone.feemarket.v1.GenesisProto.GenesisState other = (com.atomone.feemarket.v1.GenesisProto.GenesisState) obj;

      if (hasParams() != other.hasParams()) return false;
      if (hasParams()) {
        if (!getParams()
            .equals(other.getParams())) return false;
      }
      if (hasState() != other.hasState()) return false;
      if (hasState()) {
        if (!getState()
            .equals(other.getState())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasParams()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParams().hashCode();
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.atomone.feemarket.v1.GenesisProto.GenesisState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.atomone.feemarket.v1.GenesisProto.GenesisState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * GenesisState defines the feemarket module's genesis state.
     * </pre>
     *
     * Protobuf type {@code atomone.feemarket.v1.GenesisState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:atomone.feemarket.v1.GenesisState)
        com.atomone.feemarket.v1.GenesisProto.GenesisStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_GenesisState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_GenesisState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.atomone.feemarket.v1.GenesisProto.GenesisState.class, com.atomone.feemarket.v1.GenesisProto.GenesisState.Builder.class);
      }

      // Construct using com.atomone.feemarket.v1.GenesisProto.GenesisState.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        state_ = null;
        if (stateBuilder_ != null) {
          stateBuilder_.dispose();
          stateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_GenesisState_descriptor;
      }

      @java.lang.Override
      public com.atomone.feemarket.v1.GenesisProto.GenesisState getDefaultInstanceForType() {
        return com.atomone.feemarket.v1.GenesisProto.GenesisState.getDefaultInstance();
      }

      @java.lang.Override
      public com.atomone.feemarket.v1.GenesisProto.GenesisState build() {
        com.atomone.feemarket.v1.GenesisProto.GenesisState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.atomone.feemarket.v1.GenesisProto.GenesisState buildPartial() {
        com.atomone.feemarket.v1.GenesisProto.GenesisState result = new com.atomone.feemarket.v1.GenesisProto.GenesisState(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.atomone.feemarket.v1.GenesisProto.GenesisState result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.params_ = paramsBuilder_ == null
              ? params_
              : paramsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.state_ = stateBuilder_ == null
              ? state_
              : stateBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.atomone.feemarket.v1.GenesisProto.GenesisState) {
          return mergeFrom((com.atomone.feemarket.v1.GenesisProto.GenesisState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.atomone.feemarket.v1.GenesisProto.GenesisState other) {
        if (other == com.atomone.feemarket.v1.GenesisProto.GenesisState.getDefaultInstance()) return this;
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getParamsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getStateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.atomone.feemarket.v1.ParamsProto.Params params_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.atomone.feemarket.v1.ParamsProto.Params, com.atomone.feemarket.v1.ParamsProto.Params.Builder, com.atomone.feemarket.v1.ParamsProto.ParamsOrBuilder> paramsBuilder_;
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       * @return Whether the params field is set.
       */
      public boolean hasParams() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       * @return The params.
       */
      public com.atomone.feemarket.v1.ParamsProto.Params getParams() {
        if (paramsBuilder_ == null) {
          return params_ == null ? com.atomone.feemarket.v1.ParamsProto.Params.getDefaultInstance() : params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder setParams(com.atomone.feemarket.v1.ParamsProto.Params value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
        } else {
          paramsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder setParams(
          com.atomone.feemarket.v1.ParamsProto.Params.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder mergeParams(com.atomone.feemarket.v1.ParamsProto.Params value) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            params_ != null &&
            params_ != com.atomone.feemarket.v1.ParamsProto.Params.getDefaultInstance()) {
            getParamsBuilder().mergeFrom(value);
          } else {
            params_ = value;
          }
        } else {
          paramsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearParams() {
        bitField0_ = (bitField0_ & ~0x00000001);
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public com.atomone.feemarket.v1.ParamsProto.Params.Builder getParamsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public com.atomone.feemarket.v1.ParamsProto.ParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_ == null ?
              com.atomone.feemarket.v1.ParamsProto.Params.getDefaultInstance() : params_;
        }
      }
      /**
       * <pre>
       * Params are the parameters for the feemarket module. These parameters
       * can be utilized to implement both the base EIP-1559 fee market and
       * and the AIMD EIP-1559 fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.atomone.feemarket.v1.ParamsProto.Params, com.atomone.feemarket.v1.ParamsProto.Params.Builder, com.atomone.feemarket.v1.ParamsProto.ParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.atomone.feemarket.v1.ParamsProto.Params, com.atomone.feemarket.v1.ParamsProto.Params.Builder, com.atomone.feemarket.v1.ParamsProto.ParamsOrBuilder>(
                  getParams(),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      private com.atomone.feemarket.v1.GenesisProto.State state_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.atomone.feemarket.v1.GenesisProto.State, com.atomone.feemarket.v1.GenesisProto.State.Builder, com.atomone.feemarket.v1.GenesisProto.StateOrBuilder> stateBuilder_;
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       * @return Whether the state field is set.
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       * @return The state.
       */
      public com.atomone.feemarket.v1.GenesisProto.State getState() {
        if (stateBuilder_ == null) {
          return state_ == null ? com.atomone.feemarket.v1.GenesisProto.State.getDefaultInstance() : state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       */
      public Builder setState(com.atomone.feemarket.v1.GenesisProto.State value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       */
      public Builder setState(
          com.atomone.feemarket.v1.GenesisProto.State.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       */
      public Builder mergeState(com.atomone.feemarket.v1.GenesisProto.State value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            state_ != null &&
            state_ != com.atomone.feemarket.v1.GenesisProto.State.getDefaultInstance()) {
            getStateBuilder().mergeFrom(value);
          } else {
            state_ = value;
          }
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = null;
        if (stateBuilder_ != null) {
          stateBuilder_.dispose();
          stateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       */
      public com.atomone.feemarket.v1.GenesisProto.State.Builder getStateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       */
      public com.atomone.feemarket.v1.GenesisProto.StateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_ == null ?
              com.atomone.feemarket.v1.GenesisProto.State.getDefaultInstance() : state_;
        }
      }
      /**
       * <pre>
       * State contains the current state of the AIMD fee market.
       * </pre>
       *
       * <code>.atomone.feemarket.v1.State state = 2 [json_name = "state", (.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.atomone.feemarket.v1.GenesisProto.State, com.atomone.feemarket.v1.GenesisProto.State.Builder, com.atomone.feemarket.v1.GenesisProto.StateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.atomone.feemarket.v1.GenesisProto.State, com.atomone.feemarket.v1.GenesisProto.State.Builder, com.atomone.feemarket.v1.GenesisProto.StateOrBuilder>(
                  getState(),
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:atomone.feemarket.v1.GenesisState)
    }

    // @@protoc_insertion_point(class_scope:atomone.feemarket.v1.GenesisState)
    private static final com.atomone.feemarket.v1.GenesisProto.GenesisState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.atomone.feemarket.v1.GenesisProto.GenesisState();
    }

    public static com.atomone.feemarket.v1.GenesisProto.GenesisState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GenesisState>
        PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
      @java.lang.Override
      public GenesisState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GenesisState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GenesisState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.atomone.feemarket.v1.GenesisProto.GenesisState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:atomone.feemarket.v1.State)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * BaseGasPrice is the current base fee. This is denominated in the fee per
     * gas unit.
     * </pre>
     *
     * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The baseGasPrice.
     */
    java.lang.String getBaseGasPrice();
    /**
     * <pre>
     * BaseGasPrice is the current base fee. This is denominated in the fee per
     * gas unit.
     * </pre>
     *
     * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The bytes for baseGasPrice.
     */
    com.google.protobuf.ByteString
        getBaseGasPriceBytes();

    /**
     * <pre>
     * LearningRate is the current learning rate.
     * </pre>
     *
     * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The learningRate.
     */
    java.lang.String getLearningRate();
    /**
     * <pre>
     * LearningRate is the current learning rate.
     * </pre>
     *
     * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The bytes for learningRate.
     */
    com.google.protobuf.ByteString
        getLearningRateBytes();

    /**
     * <pre>
     * Window contains a list of the last blocks' gas values. This is used
     * to calculate the next base fee. This stores the number of units of gas
     * consumed per block.
     * </pre>
     *
     * <code>repeated uint64 window = 3 [json_name = "window"];</code>
     * @return A list containing the window.
     */
    java.util.List<java.lang.Long> getWindowList();
    /**
     * <pre>
     * Window contains a list of the last blocks' gas values. This is used
     * to calculate the next base fee. This stores the number of units of gas
     * consumed per block.
     * </pre>
     *
     * <code>repeated uint64 window = 3 [json_name = "window"];</code>
     * @return The count of window.
     */
    int getWindowCount();
    /**
     * <pre>
     * Window contains a list of the last blocks' gas values. This is used
     * to calculate the next base fee. This stores the number of units of gas
     * consumed per block.
     * </pre>
     *
     * <code>repeated uint64 window = 3 [json_name = "window"];</code>
     * @param index The index of the element to return.
     * @return The window at the given index.
     */
    long getWindow(int index);

    /**
     * <pre>
     * Index is the index of the current block in the block gas window.
     * </pre>
     *
     * <code>uint64 index = 4 [json_name = "index"];</code>
     * @return The index.
     */
    long getIndex();
  }
  /**
   * <pre>
   * State is utilized to track the current state of the fee market. This includes
   * the current base fee, learning rate, and block gas within the
   * specified AIMD window.
   * </pre>
   *
   * Protobuf type {@code atomone.feemarket.v1.State}
   */
  public static final class State extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:atomone.feemarket.v1.State)
      StateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use State.newBuilder() to construct.
    private State(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private State() {
      baseGasPrice_ = "";
      learningRate_ = "";
      window_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new State();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_State_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.atomone.feemarket.v1.GenesisProto.State.class, com.atomone.feemarket.v1.GenesisProto.State.Builder.class);
    }

    public static final int BASE_GAS_PRICE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object baseGasPrice_ = "";
    /**
     * <pre>
     * BaseGasPrice is the current base fee. This is denominated in the fee per
     * gas unit.
     * </pre>
     *
     * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The baseGasPrice.
     */
    @java.lang.Override
    public java.lang.String getBaseGasPrice() {
      java.lang.Object ref = baseGasPrice_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        baseGasPrice_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * BaseGasPrice is the current base fee. This is denominated in the fee per
     * gas unit.
     * </pre>
     *
     * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The bytes for baseGasPrice.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBaseGasPriceBytes() {
      java.lang.Object ref = baseGasPrice_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        baseGasPrice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEARNING_RATE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object learningRate_ = "";
    /**
     * <pre>
     * LearningRate is the current learning rate.
     * </pre>
     *
     * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The learningRate.
     */
    @java.lang.Override
    public java.lang.String getLearningRate() {
      java.lang.Object ref = learningRate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        learningRate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * LearningRate is the current learning rate.
     * </pre>
     *
     * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return The bytes for learningRate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLearningRateBytes() {
      java.lang.Object ref = learningRate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        learningRate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WINDOW_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList window_;
    /**
     * <pre>
     * Window contains a list of the last blocks' gas values. This is used
     * to calculate the next base fee. This stores the number of units of gas
     * consumed per block.
     * </pre>
     *
     * <code>repeated uint64 window = 3 [json_name = "window"];</code>
     * @return A list containing the window.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getWindowList() {
      return window_;
    }
    /**
     * <pre>
     * Window contains a list of the last blocks' gas values. This is used
     * to calculate the next base fee. This stores the number of units of gas
     * consumed per block.
     * </pre>
     *
     * <code>repeated uint64 window = 3 [json_name = "window"];</code>
     * @return The count of window.
     */
    public int getWindowCount() {
      return window_.size();
    }
    /**
     * <pre>
     * Window contains a list of the last blocks' gas values. This is used
     * to calculate the next base fee. This stores the number of units of gas
     * consumed per block.
     * </pre>
     *
     * <code>repeated uint64 window = 3 [json_name = "window"];</code>
     * @param index The index of the element to return.
     * @return The window at the given index.
     */
    public long getWindow(int index) {
      return window_.getLong(index);
    }
    private int windowMemoizedSerializedSize = -1;

    public static final int INDEX_FIELD_NUMBER = 4;
    private long index_ = 0L;
    /**
     * <pre>
     * Index is the index of the current block in the block gas window.
     * </pre>
     *
     * <code>uint64 index = 4 [json_name = "index"];</code>
     * @return The index.
     */
    @java.lang.Override
    public long getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(baseGasPrice_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, baseGasPrice_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(learningRate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, learningRate_);
      }
      if (getWindowList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(windowMemoizedSerializedSize);
      }
      for (int i = 0; i < window_.size(); i++) {
        output.writeUInt64NoTag(window_.getLong(i));
      }
      if (index_ != 0L) {
        output.writeUInt64(4, index_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(baseGasPrice_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, baseGasPrice_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(learningRate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, learningRate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < window_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(window_.getLong(i));
        }
        size += dataSize;
        if (!getWindowList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        windowMemoizedSerializedSize = dataSize;
      }
      if (index_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, index_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.atomone.feemarket.v1.GenesisProto.State)) {
        return super.equals(obj);
      }
      com.atomone.feemarket.v1.GenesisProto.State other = (com.atomone.feemarket.v1.GenesisProto.State) obj;

      if (!getBaseGasPrice()
          .equals(other.getBaseGasPrice())) return false;
      if (!getLearningRate()
          .equals(other.getLearningRate())) return false;
      if (!getWindowList()
          .equals(other.getWindowList())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BASE_GAS_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + getBaseGasPrice().hashCode();
      hash = (37 * hash) + LEARNING_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getLearningRate().hashCode();
      if (getWindowCount() > 0) {
        hash = (37 * hash) + WINDOW_FIELD_NUMBER;
        hash = (53 * hash) + getWindowList().hashCode();
      }
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIndex());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.atomone.feemarket.v1.GenesisProto.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.atomone.feemarket.v1.GenesisProto.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.atomone.feemarket.v1.GenesisProto.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.atomone.feemarket.v1.GenesisProto.State prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * State is utilized to track the current state of the fee market. This includes
     * the current base fee, learning rate, and block gas within the
     * specified AIMD window.
     * </pre>
     *
     * Protobuf type {@code atomone.feemarket.v1.State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:atomone.feemarket.v1.State)
        com.atomone.feemarket.v1.GenesisProto.StateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_State_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.atomone.feemarket.v1.GenesisProto.State.class, com.atomone.feemarket.v1.GenesisProto.State.Builder.class);
      }

      // Construct using com.atomone.feemarket.v1.GenesisProto.State.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        baseGasPrice_ = "";
        learningRate_ = "";
        window_ = emptyLongList();
        index_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.atomone.feemarket.v1.GenesisProto.internal_static_atomone_feemarket_v1_State_descriptor;
      }

      @java.lang.Override
      public com.atomone.feemarket.v1.GenesisProto.State getDefaultInstanceForType() {
        return com.atomone.feemarket.v1.GenesisProto.State.getDefaultInstance();
      }

      @java.lang.Override
      public com.atomone.feemarket.v1.GenesisProto.State build() {
        com.atomone.feemarket.v1.GenesisProto.State result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.atomone.feemarket.v1.GenesisProto.State buildPartial() {
        com.atomone.feemarket.v1.GenesisProto.State result = new com.atomone.feemarket.v1.GenesisProto.State(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.atomone.feemarket.v1.GenesisProto.State result) {
        if (((bitField0_ & 0x00000004) != 0)) {
          window_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.window_ = window_;
      }

      private void buildPartial0(com.atomone.feemarket.v1.GenesisProto.State result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.baseGasPrice_ = baseGasPrice_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.learningRate_ = learningRate_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.index_ = index_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.atomone.feemarket.v1.GenesisProto.State) {
          return mergeFrom((com.atomone.feemarket.v1.GenesisProto.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.atomone.feemarket.v1.GenesisProto.State other) {
        if (other == com.atomone.feemarket.v1.GenesisProto.State.getDefaultInstance()) return this;
        if (!other.getBaseGasPrice().isEmpty()) {
          baseGasPrice_ = other.baseGasPrice_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getLearningRate().isEmpty()) {
          learningRate_ = other.learningRate_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.window_.isEmpty()) {
          if (window_.isEmpty()) {
            window_ = other.window_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureWindowIsMutable();
            window_.addAll(other.window_);
          }
          onChanged();
        }
        if (other.getIndex() != 0L) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                baseGasPrice_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                learningRate_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                long v = input.readUInt64();
                ensureWindowIsMutable();
                window_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureWindowIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  window_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                index_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object baseGasPrice_ = "";
      /**
       * <pre>
       * BaseGasPrice is the current base fee. This is denominated in the fee per
       * gas unit.
       * </pre>
       *
       * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return The baseGasPrice.
       */
      public java.lang.String getBaseGasPrice() {
        java.lang.Object ref = baseGasPrice_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          baseGasPrice_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * BaseGasPrice is the current base fee. This is denominated in the fee per
       * gas unit.
       * </pre>
       *
       * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return The bytes for baseGasPrice.
       */
      public com.google.protobuf.ByteString
          getBaseGasPriceBytes() {
        java.lang.Object ref = baseGasPrice_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          baseGasPrice_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * BaseGasPrice is the current base fee. This is denominated in the fee per
       * gas unit.
       * </pre>
       *
       * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @param value The baseGasPrice to set.
       * @return This builder for chaining.
       */
      public Builder setBaseGasPrice(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        baseGasPrice_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BaseGasPrice is the current base fee. This is denominated in the fee per
       * gas unit.
       * </pre>
       *
       * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBaseGasPrice() {
        baseGasPrice_ = getDefaultInstance().getBaseGasPrice();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BaseGasPrice is the current base fee. This is denominated in the fee per
       * gas unit.
       * </pre>
       *
       * <code>string base_gas_price = 1 [json_name = "baseGasPrice", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @param value The bytes for baseGasPrice to set.
       * @return This builder for chaining.
       */
      public Builder setBaseGasPriceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        baseGasPrice_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object learningRate_ = "";
      /**
       * <pre>
       * LearningRate is the current learning rate.
       * </pre>
       *
       * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return The learningRate.
       */
      public java.lang.String getLearningRate() {
        java.lang.Object ref = learningRate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          learningRate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * LearningRate is the current learning rate.
       * </pre>
       *
       * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return The bytes for learningRate.
       */
      public com.google.protobuf.ByteString
          getLearningRateBytes() {
        java.lang.Object ref = learningRate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          learningRate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * LearningRate is the current learning rate.
       * </pre>
       *
       * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @param value The learningRate to set.
       * @return This builder for chaining.
       */
      public Builder setLearningRate(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        learningRate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LearningRate is the current learning rate.
       * </pre>
       *
       * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @return This builder for chaining.
       */
      public Builder clearLearningRate() {
        learningRate_ = getDefaultInstance().getLearningRate();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LearningRate is the current learning rate.
       * </pre>
       *
       * <code>string learning_rate = 2 [json_name = "learningRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
       * @param value The bytes for learningRate to set.
       * @return This builder for chaining.
       */
      public Builder setLearningRateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        learningRate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList window_ = emptyLongList();
      private void ensureWindowIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          window_ = mutableCopy(window_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * Window contains a list of the last blocks' gas values. This is used
       * to calculate the next base fee. This stores the number of units of gas
       * consumed per block.
       * </pre>
       *
       * <code>repeated uint64 window = 3 [json_name = "window"];</code>
       * @return A list containing the window.
       */
      public java.util.List<java.lang.Long>
          getWindowList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(window_) : window_;
      }
      /**
       * <pre>
       * Window contains a list of the last blocks' gas values. This is used
       * to calculate the next base fee. This stores the number of units of gas
       * consumed per block.
       * </pre>
       *
       * <code>repeated uint64 window = 3 [json_name = "window"];</code>
       * @return The count of window.
       */
      public int getWindowCount() {
        return window_.size();
      }
      /**
       * <pre>
       * Window contains a list of the last blocks' gas values. This is used
       * to calculate the next base fee. This stores the number of units of gas
       * consumed per block.
       * </pre>
       *
       * <code>repeated uint64 window = 3 [json_name = "window"];</code>
       * @param index The index of the element to return.
       * @return The window at the given index.
       */
      public long getWindow(int index) {
        return window_.getLong(index);
      }
      /**
       * <pre>
       * Window contains a list of the last blocks' gas values. This is used
       * to calculate the next base fee. This stores the number of units of gas
       * consumed per block.
       * </pre>
       *
       * <code>repeated uint64 window = 3 [json_name = "window"];</code>
       * @param index The index to set the value at.
       * @param value The window to set.
       * @return This builder for chaining.
       */
      public Builder setWindow(
          int index, long value) {

        ensureWindowIsMutable();
        window_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Window contains a list of the last blocks' gas values. This is used
       * to calculate the next base fee. This stores the number of units of gas
       * consumed per block.
       * </pre>
       *
       * <code>repeated uint64 window = 3 [json_name = "window"];</code>
       * @param value The window to add.
       * @return This builder for chaining.
       */
      public Builder addWindow(long value) {

        ensureWindowIsMutable();
        window_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Window contains a list of the last blocks' gas values. This is used
       * to calculate the next base fee. This stores the number of units of gas
       * consumed per block.
       * </pre>
       *
       * <code>repeated uint64 window = 3 [json_name = "window"];</code>
       * @param values The window to add.
       * @return This builder for chaining.
       */
      public Builder addAllWindow(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureWindowIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, window_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Window contains a list of the last blocks' gas values. This is used
       * to calculate the next base fee. This stores the number of units of gas
       * consumed per block.
       * </pre>
       *
       * <code>repeated uint64 window = 3 [json_name = "window"];</code>
       * @return This builder for chaining.
       */
      public Builder clearWindow() {
        window_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private long index_ ;
      /**
       * <pre>
       * Index is the index of the current block in the block gas window.
       * </pre>
       *
       * <code>uint64 index = 4 [json_name = "index"];</code>
       * @return The index.
       */
      @java.lang.Override
      public long getIndex() {
        return index_;
      }
      /**
       * <pre>
       * Index is the index of the current block in the block gas window.
       * </pre>
       *
       * <code>uint64 index = 4 [json_name = "index"];</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(long value) {

        index_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Index is the index of the current block in the block gas window.
       * </pre>
       *
       * <code>uint64 index = 4 [json_name = "index"];</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        index_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:atomone.feemarket.v1.State)
    }

    // @@protoc_insertion_point(class_scope:atomone.feemarket.v1.State)
    private static final com.atomone.feemarket.v1.GenesisProto.State DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.atomone.feemarket.v1.GenesisProto.State();
    }

    public static com.atomone.feemarket.v1.GenesisProto.State getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<State>
        PARSER = new com.google.protobuf.AbstractParser<State>() {
      @java.lang.Override
      public State parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<State> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<State> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.atomone.feemarket.v1.GenesisProto.State getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_atomone_feemarket_v1_GenesisState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_atomone_feemarket_v1_GenesisState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_atomone_feemarket_v1_State_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_atomone_feemarket_v1_State_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"atomone/feemarket/v1/genesis.proto\022\024at" +
      "omone.feemarket.v1\032\024gogoproto/gogo.proto" +
      "\032\031cosmos_proto/cosmos.proto\032!atomone/fee" +
      "market/v1/params.proto\"\203\001\n\014GenesisState\022" +
      ":\n\006params\030\001 \001(\0132\034.atomone.feemarket.v1.P" +
      "aramsB\004\310\336\037\000R\006params\0227\n\005state\030\002 \001(\0132\033.ato" +
      "mone.feemarket.v1.StateB\004\310\336\037\000R\005state\"\346\001\n" +
      "\005State\022W\n\016base_gas_price\030\001 \001(\tB1\310\336\037\000\332\336\037\033" +
      "cosmossdk.io/math.LegacyDec\322\264-\ncosmos.De" +
      "cR\014baseGasPrice\022V\n\rlearning_rate\030\002 \001(\tB1" +
      "\310\336\037\000\332\336\037\033cosmossdk.io/math.LegacyDec\322\264-\nc" +
      "osmos.DecR\014learningRate\022\026\n\006window\030\003 \003(\004R" +
      "\006window\022\024\n\005index\030\004 \001(\004R\005indexB\312\001\n\030com.at" +
      "omone.feemarket.v1B\014GenesisProtoZ0github" +
      ".com/atomone-hub/atomone/x/feemarket/typ" +
      "es\242\002\003AFX\252\002\024Atomone.Feemarket.V1\312\002\024Atomon" +
      "e\\Feemarket\\V1\342\002 Atomone\\Feemarket\\V1\\GP" +
      "BMetadata\352\002\026Atomone::Feemarket::V1b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.cosmos_proto.CosmosProto.getDescriptor(),
          com.atomone.feemarket.v1.ParamsProto.getDescriptor(),
        });
    internal_static_atomone_feemarket_v1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_atomone_feemarket_v1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_atomone_feemarket_v1_GenesisState_descriptor,
        new java.lang.String[] { "Params", "State", });
    internal_static_atomone_feemarket_v1_State_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_atomone_feemarket_v1_State_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_atomone_feemarket_v1_State_descriptor,
        new java.lang.String[] { "BaseGasPrice", "LearningRate", "Window", "Index", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.cosmos_proto.CosmosProto.scalar);
    registry.add(com.gogoproto.GogoProto.customtype);
    registry.add(com.gogoproto.GogoProto.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.cosmos_proto.CosmosProto.getDescriptor();
    com.atomone.feemarket.v1.ParamsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
