// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: atomone/gov/v1/genesis.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// Since: cosmos-sdk 0.46

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// GenesisState defines the gov module's genesis state.
struct Atomone_Gov_V1_GenesisState {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// starting_proposal_id is the ID of the starting proposal.
  var startingProposalID: UInt64 {
    get {return _storage._startingProposalID}
    set {_uniqueStorage()._startingProposalID = newValue}
  }

  /// deposits defines all the deposits present at genesis.
  var deposits: [Atomone_Gov_V1_Deposit] {
    get {return _storage._deposits}
    set {_uniqueStorage()._deposits = newValue}
  }

  /// votes defines all the votes present at genesis.
  var votes: [Atomone_Gov_V1_Vote] {
    get {return _storage._votes}
    set {_uniqueStorage()._votes = newValue}
  }

  /// proposals defines all the proposals present at genesis.
  var proposals: [Atomone_Gov_V1_Proposal] {
    get {return _storage._proposals}
    set {_uniqueStorage()._proposals = newValue}
  }

  /// Deprecated: Prefer to use `params` instead.
  /// deposit_params defines all the paramaters of related to deposit.
  var depositParams: Atomone_Gov_V1_DepositParams {
    get {return _storage._depositParams ?? Atomone_Gov_V1_DepositParams()}
    set {_uniqueStorage()._depositParams = newValue}
  }
  /// Returns true if `depositParams` has been explicitly set.
  var hasDepositParams: Bool {return _storage._depositParams != nil}
  /// Clears the value of `depositParams`. Subsequent reads from it will return its default value.
  mutating func clearDepositParams() {_uniqueStorage()._depositParams = nil}

  /// Deprecated: Prefer to use `params` instead.
  /// voting_params defines all the paramaters of related to voting.
  var votingParams: Atomone_Gov_V1_VotingParams {
    get {return _storage._votingParams ?? Atomone_Gov_V1_VotingParams()}
    set {_uniqueStorage()._votingParams = newValue}
  }
  /// Returns true if `votingParams` has been explicitly set.
  var hasVotingParams: Bool {return _storage._votingParams != nil}
  /// Clears the value of `votingParams`. Subsequent reads from it will return its default value.
  mutating func clearVotingParams() {_uniqueStorage()._votingParams = nil}

  /// Deprecated: Prefer to use `params` instead.
  /// tally_params defines all the paramaters of related to tally.
  var tallyParams: Atomone_Gov_V1_TallyParams {
    get {return _storage._tallyParams ?? Atomone_Gov_V1_TallyParams()}
    set {_uniqueStorage()._tallyParams = newValue}
  }
  /// Returns true if `tallyParams` has been explicitly set.
  var hasTallyParams: Bool {return _storage._tallyParams != nil}
  /// Clears the value of `tallyParams`. Subsequent reads from it will return its default value.
  mutating func clearTallyParams() {_uniqueStorage()._tallyParams = nil}

  /// params defines all the paramaters of x/gov module.
  ///
  /// Since: cosmos-sdk 0.47
  var params: Atomone_Gov_V1_Params {
    get {return _storage._params ?? Atomone_Gov_V1_Params()}
    set {_uniqueStorage()._params = newValue}
  }
  /// Returns true if `params` has been explicitly set.
  var hasParams: Bool {return _storage._params != nil}
  /// Clears the value of `params`. Subsequent reads from it will return its default value.
  mutating func clearParams() {_uniqueStorage()._params = nil}

  /// The constitution allows builders to lay a foundation and define purpose.
  ///
  /// Since: cosmos-sdk 0.48
  var constitution: String {
    get {return _storage._constitution}
    set {_uniqueStorage()._constitution = newValue}
  }

  /// last updated value for the dynamic min deposit
  var lastMinDeposit: Atomone_Gov_V1_LastMinDeposit {
    get {return _storage._lastMinDeposit ?? Atomone_Gov_V1_LastMinDeposit()}
    set {_uniqueStorage()._lastMinDeposit = newValue}
  }
  /// Returns true if `lastMinDeposit` has been explicitly set.
  var hasLastMinDeposit: Bool {return _storage._lastMinDeposit != nil}
  /// Clears the value of `lastMinDeposit`. Subsequent reads from it will return its default value.
  mutating func clearLastMinDeposit() {_uniqueStorage()._lastMinDeposit = nil}

  /// last updated value for the dynamic min initial deposit
  var lastMinInitialDeposit: Atomone_Gov_V1_LastMinDeposit {
    get {return _storage._lastMinInitialDeposit ?? Atomone_Gov_V1_LastMinDeposit()}
    set {_uniqueStorage()._lastMinInitialDeposit = newValue}
  }
  /// Returns true if `lastMinInitialDeposit` has been explicitly set.
  var hasLastMinInitialDeposit: Bool {return _storage._lastMinInitialDeposit != nil}
  /// Clears the value of `lastMinInitialDeposit`. Subsequent reads from it will return its default value.
  mutating func clearLastMinInitialDeposit() {_uniqueStorage()._lastMinInitialDeposit = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Atomone_Gov_V1_GenesisState: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "atomone.gov.v1"

extension Atomone_Gov_V1_GenesisState: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GenesisState"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "starting_proposal_id"),
    2: .same(proto: "deposits"),
    3: .same(proto: "votes"),
    4: .same(proto: "proposals"),
    5: .standard(proto: "deposit_params"),
    6: .standard(proto: "voting_params"),
    7: .standard(proto: "tally_params"),
    8: .same(proto: "params"),
    9: .same(proto: "constitution"),
    10: .standard(proto: "last_min_deposit"),
    11: .standard(proto: "last_min_initial_deposit"),
  ]

  fileprivate class _StorageClass {
    var _startingProposalID: UInt64 = 0
    var _deposits: [Atomone_Gov_V1_Deposit] = []
    var _votes: [Atomone_Gov_V1_Vote] = []
    var _proposals: [Atomone_Gov_V1_Proposal] = []
    var _depositParams: Atomone_Gov_V1_DepositParams? = nil
    var _votingParams: Atomone_Gov_V1_VotingParams? = nil
    var _tallyParams: Atomone_Gov_V1_TallyParams? = nil
    var _params: Atomone_Gov_V1_Params? = nil
    var _constitution: String = String()
    var _lastMinDeposit: Atomone_Gov_V1_LastMinDeposit? = nil
    var _lastMinInitialDeposit: Atomone_Gov_V1_LastMinDeposit? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _startingProposalID = source._startingProposalID
      _deposits = source._deposits
      _votes = source._votes
      _proposals = source._proposals
      _depositParams = source._depositParams
      _votingParams = source._votingParams
      _tallyParams = source._tallyParams
      _params = source._params
      _constitution = source._constitution
      _lastMinDeposit = source._lastMinDeposit
      _lastMinInitialDeposit = source._lastMinInitialDeposit
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularUInt64Field(value: &_storage._startingProposalID) }()
        case 2: try { try decoder.decodeRepeatedMessageField(value: &_storage._deposits) }()
        case 3: try { try decoder.decodeRepeatedMessageField(value: &_storage._votes) }()
        case 4: try { try decoder.decodeRepeatedMessageField(value: &_storage._proposals) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._depositParams) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._votingParams) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._tallyParams) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._params) }()
        case 9: try { try decoder.decodeSingularStringField(value: &_storage._constitution) }()
        case 10: try { try decoder.decodeSingularMessageField(value: &_storage._lastMinDeposit) }()
        case 11: try { try decoder.decodeSingularMessageField(value: &_storage._lastMinInitialDeposit) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if _storage._startingProposalID != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._startingProposalID, fieldNumber: 1)
      }
      if !_storage._deposits.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._deposits, fieldNumber: 2)
      }
      if !_storage._votes.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._votes, fieldNumber: 3)
      }
      if !_storage._proposals.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._proposals, fieldNumber: 4)
      }
      try { if let v = _storage._depositParams {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      } }()
      try { if let v = _storage._votingParams {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      } }()
      try { if let v = _storage._tallyParams {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      try { if let v = _storage._params {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      } }()
      if !_storage._constitution.isEmpty {
        try visitor.visitSingularStringField(value: _storage._constitution, fieldNumber: 9)
      }
      try { if let v = _storage._lastMinDeposit {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      } }()
      try { if let v = _storage._lastMinInitialDeposit {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Atomone_Gov_V1_GenesisState, rhs: Atomone_Gov_V1_GenesisState) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._startingProposalID != rhs_storage._startingProposalID {return false}
        if _storage._deposits != rhs_storage._deposits {return false}
        if _storage._votes != rhs_storage._votes {return false}
        if _storage._proposals != rhs_storage._proposals {return false}
        if _storage._depositParams != rhs_storage._depositParams {return false}
        if _storage._votingParams != rhs_storage._votingParams {return false}
        if _storage._tallyParams != rhs_storage._tallyParams {return false}
        if _storage._params != rhs_storage._params {return false}
        if _storage._constitution != rhs_storage._constitution {return false}
        if _storage._lastMinDeposit != rhs_storage._lastMinDeposit {return false}
        if _storage._lastMinInitialDeposit != rhs_storage._lastMinInitialDeposit {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
