// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: stratos/register/v1/query.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// QueryResourceNodeRequest is request type for the Query/ResourceNode RPC method
struct Stratos_Register_V1_QueryResourceNodeRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// network_addr defines the node network address to query for.
  var networkAddr: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryResourceNodeResponse is response type for the Query/ResourceNode RPC method
struct Stratos_Register_V1_QueryResourceNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// node defines the the resourceNode info.
  var node: Stratos_Register_V1_ResourceNode {
    get {return _node ?? Stratos_Register_V1_ResourceNode()}
    set {_node = newValue}
  }
  /// Returns true if `node` has been explicitly set.
  var hasNode: Bool {return self._node != nil}
  /// Clears the value of `node`. Subsequent reads from it will return its default value.
  mutating func clearNode() {self._node = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _node: Stratos_Register_V1_ResourceNode? = nil
}

/// QueryMetaNodeRequest is request type for the Query/MetaNode RPC method
struct Stratos_Register_V1_QueryMetaNodeRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// network_addr defines the node network address to query for.
  var networkAddr: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryMetaNodeResponse is response type for the Query/MetaNode RPC method
struct Stratos_Register_V1_QueryMetaNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// node defines the the meta info.
  var node: Stratos_Register_V1_MetaNode {
    get {return _node ?? Stratos_Register_V1_MetaNode()}
    set {_node = newValue}
  }
  /// Returns true if `node` has been explicitly set.
  var hasNode: Bool {return self._node != nil}
  /// Clears the value of `node`. Subsequent reads from it will return its default value.
  mutating func clearNode() {self._node = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _node: Stratos_Register_V1_MetaNode? = nil
}

/// QueryDepositByNodeRequest is request type for the Query/DepositByNode RPC method
struct Stratos_Register_V1_QueryDepositByNodeRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// network_addr defines the node network address to query for.
  var networkAddr: String = String()

  var queryType: UInt32 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryDepositByNodeResponse is response type for the Query/DepositByNode RPC method
struct Stratos_Register_V1_QueryDepositByNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// deposit_info defines the the deposit info of the node.
  var depositInfo: Stratos_Register_V1_DepositInfo {
    get {return _depositInfo ?? Stratos_Register_V1_DepositInfo()}
    set {_depositInfo = newValue}
  }
  /// Returns true if `depositInfo` has been explicitly set.
  var hasDepositInfo: Bool {return self._depositInfo != nil}
  /// Clears the value of `depositInfo`. Subsequent reads from it will return its default value.
  mutating func clearDepositInfo() {self._depositInfo = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _depositInfo: Stratos_Register_V1_DepositInfo? = nil
}

/// QueryDepositByOwnerRequest is request type for the Query/DepositByOwner RPC method
struct Stratos_Register_V1_QueryDepositByOwnerRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// owner_addr defines the owner address to query for.
  var ownerAddr: String = String()

  /// pagination defines an optional pagination for the request.
  var pagination: Cosmos_Base_Query_V1beta1_PageRequest {
    get {return _pagination ?? Cosmos_Base_Query_V1beta1_PageRequest()}
    set {_pagination = newValue}
  }
  /// Returns true if `pagination` has been explicitly set.
  var hasPagination: Bool {return self._pagination != nil}
  /// Clears the value of `pagination`. Subsequent reads from it will return its default value.
  mutating func clearPagination() {self._pagination = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _pagination: Cosmos_Base_Query_V1beta1_PageRequest? = nil
}

/// QueryDepositByOwnerResponse is response type for the Query/DepositByOwner RPC method
struct Stratos_Register_V1_QueryDepositByOwnerResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// deposit_infos defines the the node deposit info of this owner.
  var depositInfos: [Stratos_Register_V1_DepositInfo] = []

  /// pagination defines an optional pagination for the request.
  var pagination: Cosmos_Base_Query_V1beta1_PageResponse {
    get {return _pagination ?? Cosmos_Base_Query_V1beta1_PageResponse()}
    set {_pagination = newValue}
  }
  /// Returns true if `pagination` has been explicitly set.
  var hasPagination: Bool {return self._pagination != nil}
  /// Clears the value of `pagination`. Subsequent reads from it will return its default value.
  mutating func clearPagination() {self._pagination = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _pagination: Cosmos_Base_Query_V1beta1_PageResponse? = nil
}

/// QueryDepositTotalRequest is request type for the Query/DepositTotal RPC method
struct Stratos_Register_V1_QueryDepositTotalRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryDepositTotalResponse is response type for the Query/DepositTotal RPC method
struct Stratos_Register_V1_QueryDepositTotalResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var resourceNodesTotalDeposit: Cosmos_Base_V1beta1_Coin {
    get {return _resourceNodesTotalDeposit ?? Cosmos_Base_V1beta1_Coin()}
    set {_resourceNodesTotalDeposit = newValue}
  }
  /// Returns true if `resourceNodesTotalDeposit` has been explicitly set.
  var hasResourceNodesTotalDeposit: Bool {return self._resourceNodesTotalDeposit != nil}
  /// Clears the value of `resourceNodesTotalDeposit`. Subsequent reads from it will return its default value.
  mutating func clearResourceNodesTotalDeposit() {self._resourceNodesTotalDeposit = nil}

  var metaNodesTotalDeposit: Cosmos_Base_V1beta1_Coin {
    get {return _metaNodesTotalDeposit ?? Cosmos_Base_V1beta1_Coin()}
    set {_metaNodesTotalDeposit = newValue}
  }
  /// Returns true if `metaNodesTotalDeposit` has been explicitly set.
  var hasMetaNodesTotalDeposit: Bool {return self._metaNodesTotalDeposit != nil}
  /// Clears the value of `metaNodesTotalDeposit`. Subsequent reads from it will return its default value.
  mutating func clearMetaNodesTotalDeposit() {self._metaNodesTotalDeposit = nil}

  var totalBondedDeposit: Cosmos_Base_V1beta1_Coin {
    get {return _totalBondedDeposit ?? Cosmos_Base_V1beta1_Coin()}
    set {_totalBondedDeposit = newValue}
  }
  /// Returns true if `totalBondedDeposit` has been explicitly set.
  var hasTotalBondedDeposit: Bool {return self._totalBondedDeposit != nil}
  /// Clears the value of `totalBondedDeposit`. Subsequent reads from it will return its default value.
  mutating func clearTotalBondedDeposit() {self._totalBondedDeposit = nil}

  var totalUnbondedDeposit: Cosmos_Base_V1beta1_Coin {
    get {return _totalUnbondedDeposit ?? Cosmos_Base_V1beta1_Coin()}
    set {_totalUnbondedDeposit = newValue}
  }
  /// Returns true if `totalUnbondedDeposit` has been explicitly set.
  var hasTotalUnbondedDeposit: Bool {return self._totalUnbondedDeposit != nil}
  /// Clears the value of `totalUnbondedDeposit`. Subsequent reads from it will return its default value.
  mutating func clearTotalUnbondedDeposit() {self._totalUnbondedDeposit = nil}

  var totalUnbondingDeposit: Cosmos_Base_V1beta1_Coin {
    get {return _totalUnbondingDeposit ?? Cosmos_Base_V1beta1_Coin()}
    set {_totalUnbondingDeposit = newValue}
  }
  /// Returns true if `totalUnbondingDeposit` has been explicitly set.
  var hasTotalUnbondingDeposit: Bool {return self._totalUnbondingDeposit != nil}
  /// Clears the value of `totalUnbondingDeposit`. Subsequent reads from it will return its default value.
  mutating func clearTotalUnbondingDeposit() {self._totalUnbondingDeposit = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _resourceNodesTotalDeposit: Cosmos_Base_V1beta1_Coin? = nil
  fileprivate var _metaNodesTotalDeposit: Cosmos_Base_V1beta1_Coin? = nil
  fileprivate var _totalBondedDeposit: Cosmos_Base_V1beta1_Coin? = nil
  fileprivate var _totalUnbondedDeposit: Cosmos_Base_V1beta1_Coin? = nil
  fileprivate var _totalUnbondingDeposit: Cosmos_Base_V1beta1_Coin? = nil
}

/// QueryParamsRequest is request type for the Query/Params RPC method.
struct Stratos_Register_V1_QueryParamsRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryParamsResponse is response type for the Query/Params RPC method.
struct Stratos_Register_V1_QueryParamsResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// params holds all the parameters of this module.
  var params: Stratos_Register_V1_Params {
    get {return _params ?? Stratos_Register_V1_Params()}
    set {_params = newValue}
  }
  /// Returns true if `params` has been explicitly set.
  var hasParams: Bool {return self._params != nil}
  /// Clears the value of `params`. Subsequent reads from it will return its default value.
  mutating func clearParams() {self._params = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _params: Stratos_Register_V1_Params? = nil
}

/// QueryBondedResourceNodeCountRequest is request type for the Query/BondedResourceNodeCount RPC method.
struct Stratos_Register_V1_QueryBondedResourceNodeCountRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryBondedResourceNodeCountResponse is response type for the Query/BondedResourceNodeCount RPC method.
struct Stratos_Register_V1_QueryBondedResourceNodeCountResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// number holds the total number of resource nodes.
  var number: UInt64 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryBondedMetaNodeCountRequest is request type for the Query/MetaNodeNumber RPC method.
struct Stratos_Register_V1_QueryBondedMetaNodeCountRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryBondedMetaNodeCountResponse is response type for the Query/MetaNodeNumber RPC method.
struct Stratos_Register_V1_QueryBondedMetaNodeCountResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// number holds the total number of meta nodes.
  var number: UInt64 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryRemainingOzoneLimitRequest is request type for the Query/RemainingOzoneLimit RPC method.
struct Stratos_Register_V1_QueryRemainingOzoneLimitRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// QueryRemainingOzoneLimitResponse is response type for the Query/RemainingOzoneLimit RPC method.
struct Stratos_Register_V1_QueryRemainingOzoneLimitResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var ozoneLimit: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct Stratos_Register_V1_DepositInfo {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var networkAddress: String {
    get {return _storage._networkAddress}
    set {_uniqueStorage()._networkAddress = newValue}
  }

  var pubkey: SwiftProtobuf.Google_Protobuf_Any {
    get {return _storage._pubkey ?? SwiftProtobuf.Google_Protobuf_Any()}
    set {_uniqueStorage()._pubkey = newValue}
  }
  /// Returns true if `pubkey` has been explicitly set.
  var hasPubkey: Bool {return _storage._pubkey != nil}
  /// Clears the value of `pubkey`. Subsequent reads from it will return its default value.
  mutating func clearPubkey() {_uniqueStorage()._pubkey = nil}

  var suspend: Bool {
    get {return _storage._suspend}
    set {_uniqueStorage()._suspend = newValue}
  }

  var status: Cosmos_Staking_V1beta1_BondStatus {
    get {return _storage._status}
    set {_uniqueStorage()._status = newValue}
  }

  var tokens: String {
    get {return _storage._tokens}
    set {_uniqueStorage()._tokens = newValue}
  }

  var ownerAddress: String {
    get {return _storage._ownerAddress}
    set {_uniqueStorage()._ownerAddress = newValue}
  }

  var description_p: Stratos_Register_V1_Description {
    get {return _storage._description_p ?? Stratos_Register_V1_Description()}
    set {_uniqueStorage()._description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return _storage._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {_uniqueStorage()._description_p = nil}

  var creationTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._creationTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._creationTime = newValue}
  }
  /// Returns true if `creationTime` has been explicitly set.
  var hasCreationTime: Bool {return _storage._creationTime != nil}
  /// Clears the value of `creationTime`. Subsequent reads from it will return its default value.
  mutating func clearCreationTime() {_uniqueStorage()._creationTime = nil}

  var nodeType: UInt32 {
    get {return _storage._nodeType}
    set {_uniqueStorage()._nodeType = newValue}
  }

  var bondedDeposit: Cosmos_Base_V1beta1_Coin {
    get {return _storage._bondedDeposit ?? Cosmos_Base_V1beta1_Coin()}
    set {_uniqueStorage()._bondedDeposit = newValue}
  }
  /// Returns true if `bondedDeposit` has been explicitly set.
  var hasBondedDeposit: Bool {return _storage._bondedDeposit != nil}
  /// Clears the value of `bondedDeposit`. Subsequent reads from it will return its default value.
  mutating func clearBondedDeposit() {_uniqueStorage()._bondedDeposit = nil}

  var unBondingDeposit: Cosmos_Base_V1beta1_Coin {
    get {return _storage._unBondingDeposit ?? Cosmos_Base_V1beta1_Coin()}
    set {_uniqueStorage()._unBondingDeposit = newValue}
  }
  /// Returns true if `unBondingDeposit` has been explicitly set.
  var hasUnBondingDeposit: Bool {return _storage._unBondingDeposit != nil}
  /// Clears the value of `unBondingDeposit`. Subsequent reads from it will return its default value.
  mutating func clearUnBondingDeposit() {_uniqueStorage()._unBondingDeposit = nil}

  var unBondedDeposit: Cosmos_Base_V1beta1_Coin {
    get {return _storage._unBondedDeposit ?? Cosmos_Base_V1beta1_Coin()}
    set {_uniqueStorage()._unBondedDeposit = newValue}
  }
  /// Returns true if `unBondedDeposit` has been explicitly set.
  var hasUnBondedDeposit: Bool {return _storage._unBondedDeposit != nil}
  /// Clears the value of `unBondedDeposit`. Subsequent reads from it will return its default value.
  mutating func clearUnBondedDeposit() {_uniqueStorage()._unBondedDeposit = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Stratos_Register_V1_QueryResourceNodeRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryResourceNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_QueryMetaNodeRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryMetaNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_QueryDepositByNodeRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryDepositByNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_QueryDepositByOwnerRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryDepositByOwnerResponse: @unchecked Sendable {}
extension Stratos_Register_V1_QueryDepositTotalRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryDepositTotalResponse: @unchecked Sendable {}
extension Stratos_Register_V1_QueryParamsRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryParamsResponse: @unchecked Sendable {}
extension Stratos_Register_V1_QueryBondedResourceNodeCountRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryBondedResourceNodeCountResponse: @unchecked Sendable {}
extension Stratos_Register_V1_QueryBondedMetaNodeCountRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryBondedMetaNodeCountResponse: @unchecked Sendable {}
extension Stratos_Register_V1_QueryRemainingOzoneLimitRequest: @unchecked Sendable {}
extension Stratos_Register_V1_QueryRemainingOzoneLimitResponse: @unchecked Sendable {}
extension Stratos_Register_V1_DepositInfo: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "stratos.register.v1"

extension Stratos_Register_V1_QueryResourceNodeRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryResourceNodeRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "network_addr"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.networkAddr) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.networkAddr.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddr, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryResourceNodeRequest, rhs: Stratos_Register_V1_QueryResourceNodeRequest) -> Bool {
    if lhs.networkAddr != rhs.networkAddr {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryResourceNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryResourceNodeResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "node"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._node) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._node {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryResourceNodeResponse, rhs: Stratos_Register_V1_QueryResourceNodeResponse) -> Bool {
    if lhs._node != rhs._node {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryMetaNodeRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryMetaNodeRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "network_addr"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.networkAddr) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.networkAddr.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddr, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryMetaNodeRequest, rhs: Stratos_Register_V1_QueryMetaNodeRequest) -> Bool {
    if lhs.networkAddr != rhs.networkAddr {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryMetaNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryMetaNodeResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "node"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._node) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._node {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryMetaNodeResponse, rhs: Stratos_Register_V1_QueryMetaNodeResponse) -> Bool {
    if lhs._node != rhs._node {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryDepositByNodeRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryDepositByNodeRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "network_addr"),
    2: .standard(proto: "query_type"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.networkAddr) }()
      case 2: try { try decoder.decodeSingularUInt32Field(value: &self.queryType) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.networkAddr.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddr, fieldNumber: 1)
    }
    if self.queryType != 0 {
      try visitor.visitSingularUInt32Field(value: self.queryType, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryDepositByNodeRequest, rhs: Stratos_Register_V1_QueryDepositByNodeRequest) -> Bool {
    if lhs.networkAddr != rhs.networkAddr {return false}
    if lhs.queryType != rhs.queryType {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryDepositByNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryDepositByNodeResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "deposit_info"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._depositInfo) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._depositInfo {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryDepositByNodeResponse, rhs: Stratos_Register_V1_QueryDepositByNodeResponse) -> Bool {
    if lhs._depositInfo != rhs._depositInfo {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryDepositByOwnerRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryDepositByOwnerRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "owner_addr"),
    2: .same(proto: "pagination"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.ownerAddr) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._pagination) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.ownerAddr.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddr, fieldNumber: 1)
    }
    try { if let v = self._pagination {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryDepositByOwnerRequest, rhs: Stratos_Register_V1_QueryDepositByOwnerRequest) -> Bool {
    if lhs.ownerAddr != rhs.ownerAddr {return false}
    if lhs._pagination != rhs._pagination {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryDepositByOwnerResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryDepositByOwnerResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "deposit_infos"),
    2: .same(proto: "pagination"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.depositInfos) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._pagination) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.depositInfos.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.depositInfos, fieldNumber: 1)
    }
    try { if let v = self._pagination {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryDepositByOwnerResponse, rhs: Stratos_Register_V1_QueryDepositByOwnerResponse) -> Bool {
    if lhs.depositInfos != rhs.depositInfos {return false}
    if lhs._pagination != rhs._pagination {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryDepositTotalRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryDepositTotalRequest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryDepositTotalRequest, rhs: Stratos_Register_V1_QueryDepositTotalRequest) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryDepositTotalResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryDepositTotalResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "resource_nodes_total_deposit"),
    2: .standard(proto: "meta_nodes_total_deposit"),
    3: .standard(proto: "total_bonded_deposit"),
    4: .standard(proto: "total_unbonded_deposit"),
    5: .standard(proto: "total_unbonding_deposit"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._resourceNodesTotalDeposit) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._metaNodesTotalDeposit) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._totalBondedDeposit) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._totalUnbondedDeposit) }()
      case 5: try { try decoder.decodeSingularMessageField(value: &self._totalUnbondingDeposit) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._resourceNodesTotalDeposit {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    try { if let v = self._metaNodesTotalDeposit {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try { if let v = self._totalBondedDeposit {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    try { if let v = self._totalUnbondedDeposit {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    } }()
    try { if let v = self._totalUnbondingDeposit {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryDepositTotalResponse, rhs: Stratos_Register_V1_QueryDepositTotalResponse) -> Bool {
    if lhs._resourceNodesTotalDeposit != rhs._resourceNodesTotalDeposit {return false}
    if lhs._metaNodesTotalDeposit != rhs._metaNodesTotalDeposit {return false}
    if lhs._totalBondedDeposit != rhs._totalBondedDeposit {return false}
    if lhs._totalUnbondedDeposit != rhs._totalUnbondedDeposit {return false}
    if lhs._totalUnbondingDeposit != rhs._totalUnbondingDeposit {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryParamsRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryParamsRequest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryParamsRequest, rhs: Stratos_Register_V1_QueryParamsRequest) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryParamsResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryParamsResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "params"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._params) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._params {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryParamsResponse, rhs: Stratos_Register_V1_QueryParamsResponse) -> Bool {
    if lhs._params != rhs._params {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryBondedResourceNodeCountRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryBondedResourceNodeCountRequest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryBondedResourceNodeCountRequest, rhs: Stratos_Register_V1_QueryBondedResourceNodeCountRequest) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryBondedResourceNodeCountResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryBondedResourceNodeCountResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "number"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularUInt64Field(value: &self.number) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.number != 0 {
      try visitor.visitSingularUInt64Field(value: self.number, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryBondedResourceNodeCountResponse, rhs: Stratos_Register_V1_QueryBondedResourceNodeCountResponse) -> Bool {
    if lhs.number != rhs.number {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryBondedMetaNodeCountRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryBondedMetaNodeCountRequest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryBondedMetaNodeCountRequest, rhs: Stratos_Register_V1_QueryBondedMetaNodeCountRequest) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryBondedMetaNodeCountResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryBondedMetaNodeCountResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "number"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularUInt64Field(value: &self.number) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.number != 0 {
      try visitor.visitSingularUInt64Field(value: self.number, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryBondedMetaNodeCountResponse, rhs: Stratos_Register_V1_QueryBondedMetaNodeCountResponse) -> Bool {
    if lhs.number != rhs.number {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryRemainingOzoneLimitRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryRemainingOzoneLimitRequest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryRemainingOzoneLimitRequest, rhs: Stratos_Register_V1_QueryRemainingOzoneLimitRequest) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_QueryRemainingOzoneLimitResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QueryRemainingOzoneLimitResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "ozone_limit"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.ozoneLimit) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.ozoneLimit.isEmpty {
      try visitor.visitSingularStringField(value: self.ozoneLimit, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_QueryRemainingOzoneLimitResponse, rhs: Stratos_Register_V1_QueryRemainingOzoneLimitResponse) -> Bool {
    if lhs.ozoneLimit != rhs.ozoneLimit {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_DepositInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".DepositInfo"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "network_address"),
    2: .same(proto: "pubkey"),
    3: .same(proto: "suspend"),
    4: .same(proto: "status"),
    5: .same(proto: "tokens"),
    6: .standard(proto: "owner_address"),
    7: .same(proto: "description"),
    8: .standard(proto: "creation_time"),
    9: .standard(proto: "node_type"),
    10: .standard(proto: "bonded_deposit"),
    11: .standard(proto: "un_bonding_deposit"),
    12: .standard(proto: "un_bonded_deposit"),
  ]

  fileprivate class _StorageClass {
    var _networkAddress: String = String()
    var _pubkey: SwiftProtobuf.Google_Protobuf_Any? = nil
    var _suspend: Bool = false
    var _status: Cosmos_Staking_V1beta1_BondStatus = .unspecified
    var _tokens: String = String()
    var _ownerAddress: String = String()
    var _description_p: Stratos_Register_V1_Description? = nil
    var _creationTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _nodeType: UInt32 = 0
    var _bondedDeposit: Cosmos_Base_V1beta1_Coin? = nil
    var _unBondingDeposit: Cosmos_Base_V1beta1_Coin? = nil
    var _unBondedDeposit: Cosmos_Base_V1beta1_Coin? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _networkAddress = source._networkAddress
      _pubkey = source._pubkey
      _suspend = source._suspend
      _status = source._status
      _tokens = source._tokens
      _ownerAddress = source._ownerAddress
      _description_p = source._description_p
      _creationTime = source._creationTime
      _nodeType = source._nodeType
      _bondedDeposit = source._bondedDeposit
      _unBondingDeposit = source._unBondingDeposit
      _unBondedDeposit = source._unBondedDeposit
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._networkAddress) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._pubkey) }()
        case 3: try { try decoder.decodeSingularBoolField(value: &_storage._suspend) }()
        case 4: try { try decoder.decodeSingularEnumField(value: &_storage._status) }()
        case 5: try { try decoder.decodeSingularStringField(value: &_storage._tokens) }()
        case 6: try { try decoder.decodeSingularStringField(value: &_storage._ownerAddress) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._description_p) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._creationTime) }()
        case 9: try { try decoder.decodeSingularUInt32Field(value: &_storage._nodeType) }()
        case 10: try { try decoder.decodeSingularMessageField(value: &_storage._bondedDeposit) }()
        case 11: try { try decoder.decodeSingularMessageField(value: &_storage._unBondingDeposit) }()
        case 12: try { try decoder.decodeSingularMessageField(value: &_storage._unBondedDeposit) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if !_storage._networkAddress.isEmpty {
        try visitor.visitSingularStringField(value: _storage._networkAddress, fieldNumber: 1)
      }
      try { if let v = _storage._pubkey {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      } }()
      if _storage._suspend != false {
        try visitor.visitSingularBoolField(value: _storage._suspend, fieldNumber: 3)
      }
      if _storage._status != .unspecified {
        try visitor.visitSingularEnumField(value: _storage._status, fieldNumber: 4)
      }
      if !_storage._tokens.isEmpty {
        try visitor.visitSingularStringField(value: _storage._tokens, fieldNumber: 5)
      }
      if !_storage._ownerAddress.isEmpty {
        try visitor.visitSingularStringField(value: _storage._ownerAddress, fieldNumber: 6)
      }
      try { if let v = _storage._description_p {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      try { if let v = _storage._creationTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      } }()
      if _storage._nodeType != 0 {
        try visitor.visitSingularUInt32Field(value: _storage._nodeType, fieldNumber: 9)
      }
      try { if let v = _storage._bondedDeposit {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      } }()
      try { if let v = _storage._unBondingDeposit {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      } }()
      try { if let v = _storage._unBondedDeposit {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_DepositInfo, rhs: Stratos_Register_V1_DepositInfo) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._networkAddress != rhs_storage._networkAddress {return false}
        if _storage._pubkey != rhs_storage._pubkey {return false}
        if _storage._suspend != rhs_storage._suspend {return false}
        if _storage._status != rhs_storage._status {return false}
        if _storage._tokens != rhs_storage._tokens {return false}
        if _storage._ownerAddress != rhs_storage._ownerAddress {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._creationTime != rhs_storage._creationTime {return false}
        if _storage._nodeType != rhs_storage._nodeType {return false}
        if _storage._bondedDeposit != rhs_storage._bondedDeposit {return false}
        if _storage._unBondingDeposit != rhs_storage._unBondingDeposit {return false}
        if _storage._unBondedDeposit != rhs_storage._unBondedDeposit {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
