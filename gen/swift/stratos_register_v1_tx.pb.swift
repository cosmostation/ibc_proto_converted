// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: stratos/register/v1/tx.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// MsgCreateResourceNode encapsulates an MsgCreateResourceNodeTx transaction as an SDK message.
struct Stratos_Register_V1_MsgCreateResourceNode {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var networkAddress: String = String()

  var pubkey: SwiftProtobuf.Google_Protobuf_Any {
    get {return _pubkey ?? SwiftProtobuf.Google_Protobuf_Any()}
    set {_pubkey = newValue}
  }
  /// Returns true if `pubkey` has been explicitly set.
  var hasPubkey: Bool {return self._pubkey != nil}
  /// Clears the value of `pubkey`. Subsequent reads from it will return its default value.
  mutating func clearPubkey() {self._pubkey = nil}

  var value: Cosmos_Base_V1beta1_Coin {
    get {return _value ?? Cosmos_Base_V1beta1_Coin()}
    set {_value = newValue}
  }
  /// Returns true if `value` has been explicitly set.
  var hasValue: Bool {return self._value != nil}
  /// Clears the value of `value`. Subsequent reads from it will return its default value.
  mutating func clearValue() {self._value = nil}

  var ownerAddress: String = String()

  var beneficiaryAddress: String = String()

  var description_p: Stratos_Register_V1_Description {
    get {return _description_p ?? Stratos_Register_V1_Description()}
    set {_description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return self._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {self._description_p = nil}

  var nodeType: UInt32 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _pubkey: SwiftProtobuf.Google_Protobuf_Any? = nil
  fileprivate var _value: Cosmos_Base_V1beta1_Coin? = nil
  fileprivate var _description_p: Stratos_Register_V1_Description? = nil
}

/// MsgCreateResourceNodeResponse defines the CreateResourceNodeTx response type
struct Stratos_Register_V1_MsgCreateResourceNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgCreateMetaNode encapsulates an MsgCreateMetaNodeTx transaction as an SDK message.
struct Stratos_Register_V1_MsgCreateMetaNode {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var networkAddress: String = String()

  var pubkey: SwiftProtobuf.Google_Protobuf_Any {
    get {return _pubkey ?? SwiftProtobuf.Google_Protobuf_Any()}
    set {_pubkey = newValue}
  }
  /// Returns true if `pubkey` has been explicitly set.
  var hasPubkey: Bool {return self._pubkey != nil}
  /// Clears the value of `pubkey`. Subsequent reads from it will return its default value.
  mutating func clearPubkey() {self._pubkey = nil}

  var value: Cosmos_Base_V1beta1_Coin {
    get {return _value ?? Cosmos_Base_V1beta1_Coin()}
    set {_value = newValue}
  }
  /// Returns true if `value` has been explicitly set.
  var hasValue: Bool {return self._value != nil}
  /// Clears the value of `value`. Subsequent reads from it will return its default value.
  mutating func clearValue() {self._value = nil}

  var ownerAddress: String = String()

  var beneficiaryAddress: String = String()

  var description_p: Stratos_Register_V1_Description {
    get {return _description_p ?? Stratos_Register_V1_Description()}
    set {_description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return self._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {self._description_p = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _pubkey: SwiftProtobuf.Google_Protobuf_Any? = nil
  fileprivate var _value: Cosmos_Base_V1beta1_Coin? = nil
  fileprivate var _description_p: Stratos_Register_V1_Description? = nil
}

/// MsgCreateMetaNodeResponse defines the CreateMetaNode response type
struct Stratos_Register_V1_MsgCreateMetaNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgRemoveResourceNode - encapsulates an RemoveResourceNode transaction as an SDK message
struct Stratos_Register_V1_MsgRemoveResourceNode {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var resourceNodeAddress: String = String()

  var ownerAddress: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgRemoveResourceNodeResponse defines the Msg/RemoveResourceNode response type.
struct Stratos_Register_V1_MsgRemoveResourceNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgRemoveMetaNode - encapsulates an MsgRemoveMetaNode transaction as an SDK message
struct Stratos_Register_V1_MsgRemoveMetaNode {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var metaNodeAddress: String = String()

  var ownerAddress: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgRemoveMetaNodeResponse defines the Msg/RemoveMetaNode response type.
struct Stratos_Register_V1_MsgRemoveMetaNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgUpdateResourceNode defines a SDK message for updating an existing resource node.
struct Stratos_Register_V1_MsgUpdateResourceNode {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var description_p: Stratos_Register_V1_Description {
    get {return _description_p ?? Stratos_Register_V1_Description()}
    set {_description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return self._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {self._description_p = nil}

  var beneficiaryAddress: String = String()

  var networkAddress: String = String()

  var ownerAddress: String = String()

  var nodeType: UInt32 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _description_p: Stratos_Register_V1_Description? = nil
}

/// MsgUpdateResourceNodeResponse defines the Msg/UpdateResourceNode response type.
struct Stratos_Register_V1_MsgUpdateResourceNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgUpdateMetaNode defines a SDK message for updating an existing meta node.
struct Stratos_Register_V1_MsgUpdateMetaNode {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var description_p: Stratos_Register_V1_Description {
    get {return _description_p ?? Stratos_Register_V1_Description()}
    set {_description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return self._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {self._description_p = nil}

  var beneficiaryAddress: String = String()

  var networkAddress: String = String()

  var ownerAddress: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _description_p: Stratos_Register_V1_Description? = nil
}

/// MsgUpdateMetaNodeResponse defines the Msg/UpdateMetaNode response type.
struct Stratos_Register_V1_MsgUpdateMetaNodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgUpdateResourceNodeDeposit defines a SDK message for updating the deposit of an existing resource node.
struct Stratos_Register_V1_MsgUpdateResourceNodeDeposit {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var networkAddress: String = String()

  var ownerAddress: String = String()

  var depositDelta: Cosmos_Base_V1beta1_Coin {
    get {return _depositDelta ?? Cosmos_Base_V1beta1_Coin()}
    set {_depositDelta = newValue}
  }
  /// Returns true if `depositDelta` has been explicitly set.
  var hasDepositDelta: Bool {return self._depositDelta != nil}
  /// Clears the value of `depositDelta`. Subsequent reads from it will return its default value.
  mutating func clearDepositDelta() {self._depositDelta = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _depositDelta: Cosmos_Base_V1beta1_Coin? = nil
}

/// MsgUpdateResourceNodeDepositResponse defines the Msg/UpdateResourceNodeDeposit response type.
struct Stratos_Register_V1_MsgUpdateResourceNodeDepositResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgUpdateEffectiveDeposit defines a SDK message for updating the effective deposit of an existing resource node.
struct Stratos_Register_V1_MsgUpdateEffectiveDeposit {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var reporters: [String] = []

  var reporterOwner: [String] = []

  var networkAddress: String = String()

  var effectiveTokens: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgUpdateEffectiveDepositResponse defines the Msg/UpdateEffectiveDeposit response type.
struct Stratos_Register_V1_MsgUpdateEffectiveDepositResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgUpdateMetaNodeDeposit defines a SDK message for updating the deposit of an existing meta node.
struct Stratos_Register_V1_MsgUpdateMetaNodeDeposit {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var networkAddress: String = String()

  var ownerAddress: String = String()

  var depositDelta: Cosmos_Base_V1beta1_Coin {
    get {return _depositDelta ?? Cosmos_Base_V1beta1_Coin()}
    set {_depositDelta = newValue}
  }
  /// Returns true if `depositDelta` has been explicitly set.
  var hasDepositDelta: Bool {return self._depositDelta != nil}
  /// Clears the value of `depositDelta`. Subsequent reads from it will return its default value.
  mutating func clearDepositDelta() {self._depositDelta = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _depositDelta: Cosmos_Base_V1beta1_Coin? = nil
}

/// MsgUpdateMetaNodeDepositResponse defines the Msg/UpdateMetaNodeDeposit response type.
struct Stratos_Register_V1_MsgUpdateMetaNodeDepositResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgMetaNodeRegistrationVote defines a SDK message for registration vote of an existing meta node.
struct Stratos_Register_V1_MsgMetaNodeRegistrationVote {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// node address of meta node
  var candidateNetworkAddress: String = String()

  /// owner address of meta node
  var candidateOwnerAddress: String = String()

  var opinion: Bool = false

  /// address of voter (other existed meta node)
  var voterNetworkAddress: String = String()

  /// address of owner of the voter (other existed meta node)
  var voterOwnerAddress: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgMetaNodeRegistrationVoteResponse defines the Msg/MetaNodeRegistrationVote response type.
struct Stratos_Register_V1_MsgMetaNodeRegistrationVoteResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct Stratos_Register_V1_MsgKickMetaNodeVote {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var targetNetworkAddress: String = String()

  var opinion: Bool = false

  var voterNetworkAddress: String = String()

  var voterOwnerAddress: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct Stratos_Register_V1_MsgKickMetaNodeVoteResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// MsgUpdateParams defines a Msg for updating the x/register module parameters.
struct Stratos_Register_V1_MsgUpdateParams {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// authority is the address of the governance account.
  var authority: String = String()

  /// params defines the x/register parameters to update.
  /// NOTE: All parameters must be supplied.
  var params: Stratos_Register_V1_Params {
    get {return _params ?? Stratos_Register_V1_Params()}
    set {_params = newValue}
  }
  /// Returns true if `params` has been explicitly set.
  var hasParams: Bool {return self._params != nil}
  /// Clears the value of `params`. Subsequent reads from it will return its default value.
  mutating func clearParams() {self._params = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _params: Stratos_Register_V1_Params? = nil
}

/// MsgUpdateParamsResponse defines the response structure for executing a
/// MsgUpdateParams message.
struct Stratos_Register_V1_MsgUpdateParamsResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Stratos_Register_V1_MsgCreateResourceNode: @unchecked Sendable {}
extension Stratos_Register_V1_MsgCreateResourceNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgCreateMetaNode: @unchecked Sendable {}
extension Stratos_Register_V1_MsgCreateMetaNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgRemoveResourceNode: @unchecked Sendable {}
extension Stratos_Register_V1_MsgRemoveResourceNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgRemoveMetaNode: @unchecked Sendable {}
extension Stratos_Register_V1_MsgRemoveMetaNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateResourceNode: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateResourceNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateMetaNode: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateMetaNodeResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateResourceNodeDeposit: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateResourceNodeDepositResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateEffectiveDeposit: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateEffectiveDepositResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateMetaNodeDeposit: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateMetaNodeDepositResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgMetaNodeRegistrationVote: @unchecked Sendable {}
extension Stratos_Register_V1_MsgMetaNodeRegistrationVoteResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgKickMetaNodeVote: @unchecked Sendable {}
extension Stratos_Register_V1_MsgKickMetaNodeVoteResponse: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateParams: @unchecked Sendable {}
extension Stratos_Register_V1_MsgUpdateParamsResponse: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "stratos.register.v1"

extension Stratos_Register_V1_MsgCreateResourceNode: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgCreateResourceNode"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "network_address"),
    2: .same(proto: "pubkey"),
    3: .same(proto: "value"),
    4: .standard(proto: "owner_address"),
    5: .standard(proto: "beneficiary_address"),
    6: .same(proto: "description"),
    7: .standard(proto: "node_type"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.networkAddress) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._pubkey) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._value) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.ownerAddress) }()
      case 5: try { try decoder.decodeSingularStringField(value: &self.beneficiaryAddress) }()
      case 6: try { try decoder.decodeSingularMessageField(value: &self._description_p) }()
      case 7: try { try decoder.decodeSingularUInt32Field(value: &self.nodeType) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.networkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddress, fieldNumber: 1)
    }
    try { if let v = self._pubkey {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try { if let v = self._value {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    if !self.ownerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddress, fieldNumber: 4)
    }
    if !self.beneficiaryAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.beneficiaryAddress, fieldNumber: 5)
    }
    try { if let v = self._description_p {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    } }()
    if self.nodeType != 0 {
      try visitor.visitSingularUInt32Field(value: self.nodeType, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgCreateResourceNode, rhs: Stratos_Register_V1_MsgCreateResourceNode) -> Bool {
    if lhs.networkAddress != rhs.networkAddress {return false}
    if lhs._pubkey != rhs._pubkey {return false}
    if lhs._value != rhs._value {return false}
    if lhs.ownerAddress != rhs.ownerAddress {return false}
    if lhs.beneficiaryAddress != rhs.beneficiaryAddress {return false}
    if lhs._description_p != rhs._description_p {return false}
    if lhs.nodeType != rhs.nodeType {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgCreateResourceNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgCreateResourceNodeResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgCreateResourceNodeResponse, rhs: Stratos_Register_V1_MsgCreateResourceNodeResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgCreateMetaNode: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgCreateMetaNode"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "network_address"),
    2: .same(proto: "pubkey"),
    3: .same(proto: "value"),
    4: .standard(proto: "owner_address"),
    5: .standard(proto: "beneficiary_address"),
    6: .same(proto: "description"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.networkAddress) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._pubkey) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._value) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.ownerAddress) }()
      case 5: try { try decoder.decodeSingularStringField(value: &self.beneficiaryAddress) }()
      case 6: try { try decoder.decodeSingularMessageField(value: &self._description_p) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.networkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddress, fieldNumber: 1)
    }
    try { if let v = self._pubkey {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try { if let v = self._value {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    if !self.ownerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddress, fieldNumber: 4)
    }
    if !self.beneficiaryAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.beneficiaryAddress, fieldNumber: 5)
    }
    try { if let v = self._description_p {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgCreateMetaNode, rhs: Stratos_Register_V1_MsgCreateMetaNode) -> Bool {
    if lhs.networkAddress != rhs.networkAddress {return false}
    if lhs._pubkey != rhs._pubkey {return false}
    if lhs._value != rhs._value {return false}
    if lhs.ownerAddress != rhs.ownerAddress {return false}
    if lhs.beneficiaryAddress != rhs.beneficiaryAddress {return false}
    if lhs._description_p != rhs._description_p {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgCreateMetaNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgCreateMetaNodeResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgCreateMetaNodeResponse, rhs: Stratos_Register_V1_MsgCreateMetaNodeResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgRemoveResourceNode: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgRemoveResourceNode"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "resource_node_address"),
    2: .standard(proto: "owner_address"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.resourceNodeAddress) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.ownerAddress) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.resourceNodeAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.resourceNodeAddress, fieldNumber: 1)
    }
    if !self.ownerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddress, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgRemoveResourceNode, rhs: Stratos_Register_V1_MsgRemoveResourceNode) -> Bool {
    if lhs.resourceNodeAddress != rhs.resourceNodeAddress {return false}
    if lhs.ownerAddress != rhs.ownerAddress {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgRemoveResourceNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgRemoveResourceNodeResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgRemoveResourceNodeResponse, rhs: Stratos_Register_V1_MsgRemoveResourceNodeResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgRemoveMetaNode: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgRemoveMetaNode"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "meta_node_address"),
    2: .standard(proto: "owner_address"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.metaNodeAddress) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.ownerAddress) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.metaNodeAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.metaNodeAddress, fieldNumber: 1)
    }
    if !self.ownerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddress, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgRemoveMetaNode, rhs: Stratos_Register_V1_MsgRemoveMetaNode) -> Bool {
    if lhs.metaNodeAddress != rhs.metaNodeAddress {return false}
    if lhs.ownerAddress != rhs.ownerAddress {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgRemoveMetaNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgRemoveMetaNodeResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgRemoveMetaNodeResponse, rhs: Stratos_Register_V1_MsgRemoveMetaNodeResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateResourceNode: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateResourceNode"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "description"),
    2: .standard(proto: "beneficiary_address"),
    3: .standard(proto: "network_address"),
    4: .standard(proto: "owner_address"),
    5: .standard(proto: "node_type"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._description_p) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.beneficiaryAddress) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.networkAddress) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.ownerAddress) }()
      case 5: try { try decoder.decodeSingularUInt32Field(value: &self.nodeType) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._description_p {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    if !self.beneficiaryAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.beneficiaryAddress, fieldNumber: 2)
    }
    if !self.networkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddress, fieldNumber: 3)
    }
    if !self.ownerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddress, fieldNumber: 4)
    }
    if self.nodeType != 0 {
      try visitor.visitSingularUInt32Field(value: self.nodeType, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateResourceNode, rhs: Stratos_Register_V1_MsgUpdateResourceNode) -> Bool {
    if lhs._description_p != rhs._description_p {return false}
    if lhs.beneficiaryAddress != rhs.beneficiaryAddress {return false}
    if lhs.networkAddress != rhs.networkAddress {return false}
    if lhs.ownerAddress != rhs.ownerAddress {return false}
    if lhs.nodeType != rhs.nodeType {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateResourceNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateResourceNodeResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateResourceNodeResponse, rhs: Stratos_Register_V1_MsgUpdateResourceNodeResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateMetaNode: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateMetaNode"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "description"),
    2: .standard(proto: "beneficiary_address"),
    3: .standard(proto: "network_address"),
    4: .standard(proto: "owner_address"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._description_p) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.beneficiaryAddress) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.networkAddress) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.ownerAddress) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._description_p {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    if !self.beneficiaryAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.beneficiaryAddress, fieldNumber: 2)
    }
    if !self.networkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddress, fieldNumber: 3)
    }
    if !self.ownerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddress, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateMetaNode, rhs: Stratos_Register_V1_MsgUpdateMetaNode) -> Bool {
    if lhs._description_p != rhs._description_p {return false}
    if lhs.beneficiaryAddress != rhs.beneficiaryAddress {return false}
    if lhs.networkAddress != rhs.networkAddress {return false}
    if lhs.ownerAddress != rhs.ownerAddress {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateMetaNodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateMetaNodeResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateMetaNodeResponse, rhs: Stratos_Register_V1_MsgUpdateMetaNodeResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateResourceNodeDeposit: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateResourceNodeDeposit"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "network_address"),
    2: .standard(proto: "owner_address"),
    3: .standard(proto: "deposit_delta"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.networkAddress) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.ownerAddress) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._depositDelta) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.networkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddress, fieldNumber: 1)
    }
    if !self.ownerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddress, fieldNumber: 2)
    }
    try { if let v = self._depositDelta {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateResourceNodeDeposit, rhs: Stratos_Register_V1_MsgUpdateResourceNodeDeposit) -> Bool {
    if lhs.networkAddress != rhs.networkAddress {return false}
    if lhs.ownerAddress != rhs.ownerAddress {return false}
    if lhs._depositDelta != rhs._depositDelta {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateResourceNodeDepositResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateResourceNodeDepositResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateResourceNodeDepositResponse, rhs: Stratos_Register_V1_MsgUpdateResourceNodeDepositResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateEffectiveDeposit: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateEffectiveDeposit"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "reporters"),
    2: .standard(proto: "reporter_owner"),
    3: .standard(proto: "network_address"),
    4: .standard(proto: "effective_tokens"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedStringField(value: &self.reporters) }()
      case 2: try { try decoder.decodeRepeatedStringField(value: &self.reporterOwner) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.networkAddress) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.effectiveTokens) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.reporters.isEmpty {
      try visitor.visitRepeatedStringField(value: self.reporters, fieldNumber: 1)
    }
    if !self.reporterOwner.isEmpty {
      try visitor.visitRepeatedStringField(value: self.reporterOwner, fieldNumber: 2)
    }
    if !self.networkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddress, fieldNumber: 3)
    }
    if !self.effectiveTokens.isEmpty {
      try visitor.visitSingularStringField(value: self.effectiveTokens, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateEffectiveDeposit, rhs: Stratos_Register_V1_MsgUpdateEffectiveDeposit) -> Bool {
    if lhs.reporters != rhs.reporters {return false}
    if lhs.reporterOwner != rhs.reporterOwner {return false}
    if lhs.networkAddress != rhs.networkAddress {return false}
    if lhs.effectiveTokens != rhs.effectiveTokens {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateEffectiveDepositResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateEffectiveDepositResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateEffectiveDepositResponse, rhs: Stratos_Register_V1_MsgUpdateEffectiveDepositResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateMetaNodeDeposit: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateMetaNodeDeposit"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "network_address"),
    2: .standard(proto: "owner_address"),
    3: .standard(proto: "deposit_delta"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.networkAddress) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.ownerAddress) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._depositDelta) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.networkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.networkAddress, fieldNumber: 1)
    }
    if !self.ownerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.ownerAddress, fieldNumber: 2)
    }
    try { if let v = self._depositDelta {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateMetaNodeDeposit, rhs: Stratos_Register_V1_MsgUpdateMetaNodeDeposit) -> Bool {
    if lhs.networkAddress != rhs.networkAddress {return false}
    if lhs.ownerAddress != rhs.ownerAddress {return false}
    if lhs._depositDelta != rhs._depositDelta {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateMetaNodeDepositResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateMetaNodeDepositResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateMetaNodeDepositResponse, rhs: Stratos_Register_V1_MsgUpdateMetaNodeDepositResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgMetaNodeRegistrationVote: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgMetaNodeRegistrationVote"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "candidate_network_address"),
    2: .standard(proto: "candidate_owner_address"),
    3: .same(proto: "opinion"),
    4: .standard(proto: "voter_network_address"),
    5: .standard(proto: "voter_owner_address"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.candidateNetworkAddress) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.candidateOwnerAddress) }()
      case 3: try { try decoder.decodeSingularBoolField(value: &self.opinion) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.voterNetworkAddress) }()
      case 5: try { try decoder.decodeSingularStringField(value: &self.voterOwnerAddress) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.candidateNetworkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.candidateNetworkAddress, fieldNumber: 1)
    }
    if !self.candidateOwnerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.candidateOwnerAddress, fieldNumber: 2)
    }
    if self.opinion != false {
      try visitor.visitSingularBoolField(value: self.opinion, fieldNumber: 3)
    }
    if !self.voterNetworkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.voterNetworkAddress, fieldNumber: 4)
    }
    if !self.voterOwnerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.voterOwnerAddress, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgMetaNodeRegistrationVote, rhs: Stratos_Register_V1_MsgMetaNodeRegistrationVote) -> Bool {
    if lhs.candidateNetworkAddress != rhs.candidateNetworkAddress {return false}
    if lhs.candidateOwnerAddress != rhs.candidateOwnerAddress {return false}
    if lhs.opinion != rhs.opinion {return false}
    if lhs.voterNetworkAddress != rhs.voterNetworkAddress {return false}
    if lhs.voterOwnerAddress != rhs.voterOwnerAddress {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgMetaNodeRegistrationVoteResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgMetaNodeRegistrationVoteResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgMetaNodeRegistrationVoteResponse, rhs: Stratos_Register_V1_MsgMetaNodeRegistrationVoteResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgKickMetaNodeVote: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgKickMetaNodeVote"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "target_network_address"),
    2: .same(proto: "opinion"),
    3: .standard(proto: "voter_network_address"),
    4: .standard(proto: "voter_owner_address"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.targetNetworkAddress) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.opinion) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.voterNetworkAddress) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.voterOwnerAddress) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.targetNetworkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.targetNetworkAddress, fieldNumber: 1)
    }
    if self.opinion != false {
      try visitor.visitSingularBoolField(value: self.opinion, fieldNumber: 2)
    }
    if !self.voterNetworkAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.voterNetworkAddress, fieldNumber: 3)
    }
    if !self.voterOwnerAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.voterOwnerAddress, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgKickMetaNodeVote, rhs: Stratos_Register_V1_MsgKickMetaNodeVote) -> Bool {
    if lhs.targetNetworkAddress != rhs.targetNetworkAddress {return false}
    if lhs.opinion != rhs.opinion {return false}
    if lhs.voterNetworkAddress != rhs.voterNetworkAddress {return false}
    if lhs.voterOwnerAddress != rhs.voterOwnerAddress {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgKickMetaNodeVoteResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgKickMetaNodeVoteResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgKickMetaNodeVoteResponse, rhs: Stratos_Register_V1_MsgKickMetaNodeVoteResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateParams: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateParams"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "authority"),
    2: .same(proto: "params"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.authority) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._params) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.authority.isEmpty {
      try visitor.visitSingularStringField(value: self.authority, fieldNumber: 1)
    }
    try { if let v = self._params {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateParams, rhs: Stratos_Register_V1_MsgUpdateParams) -> Bool {
    if lhs.authority != rhs.authority {return false}
    if lhs._params != rhs._params {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Stratos_Register_V1_MsgUpdateParamsResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateParamsResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Stratos_Register_V1_MsgUpdateParamsResponse, rhs: Stratos_Register_V1_MsgUpdateParamsResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
