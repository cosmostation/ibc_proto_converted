//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: stratos/pot/v1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Query defines the gRPC querier service.
///
/// Usage: instantiate `Stratos_Pot_V1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Stratos_Pot_V1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol? { get }

  func volumeReport(
    _ request: Stratos_Pot_V1_QueryVolumeReportRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryVolumeReportRequest, Stratos_Pot_V1_QueryVolumeReportResponse>

  func rewardsByEpoch(
    _ request: Stratos_Pot_V1_QueryRewardsByEpochRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryRewardsByEpochRequest, Stratos_Pot_V1_QueryRewardsByEpochResponse>

  func rewardsByWallet(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryRewardsByWalletRequest, Stratos_Pot_V1_QueryRewardsByWalletResponse>

  func rewardsByWalletAndEpoch(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest, Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse>

  func slashingByOwner(
    _ request: Stratos_Pot_V1_QuerySlashingByOwnerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QuerySlashingByOwnerRequest, Stratos_Pot_V1_QuerySlashingByOwnerResponse>

  func params(
    _ request: Stratos_Pot_V1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryParamsRequest, Stratos_Pot_V1_QueryParamsResponse>

  func totalMinedToken(
    _ request: Stratos_Pot_V1_QueryTotalMinedTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryTotalMinedTokenRequest, Stratos_Pot_V1_QueryTotalMinedTokenResponse>

  func circulationSupply(
    _ request: Stratos_Pot_V1_QueryCirculationSupplyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryCirculationSupplyRequest, Stratos_Pot_V1_QueryCirculationSupplyResponse>

  func totalRewardByEpoch(
    _ request: Stratos_Pot_V1_QueryTotalRewardByEpochRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryTotalRewardByEpochRequest, Stratos_Pot_V1_QueryTotalRewardByEpochResponse>

  func metrics(
    _ request: Stratos_Pot_V1_QueryMetricsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Stratos_Pot_V1_QueryMetricsRequest, Stratos_Pot_V1_QueryMetricsResponse>
}

extension Stratos_Pot_V1_QueryClientProtocol {
  internal var serviceName: String {
    return "stratos.pot.v1.Query"
  }

  /// VolumeReport queries VolumeReport info for given epoch.
  ///
  /// - Parameters:
  ///   - request: Request to send to VolumeReport.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func volumeReport(
    _ request: Stratos_Pot_V1_QueryVolumeReportRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryVolumeReportRequest, Stratos_Pot_V1_QueryVolumeReportResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.volumeReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVolumeReportInterceptors() ?? []
    )
  }

  /// RewardsByEpoch queries Pot rewards by a given epoch.
  ///
  /// - Parameters:
  ///   - request: Request to send to RewardsByEpoch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rewardsByEpoch(
    _ request: Stratos_Pot_V1_QueryRewardsByEpochRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryRewardsByEpochRequest, Stratos_Pot_V1_QueryRewardsByEpochResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByEpochInterceptors() ?? []
    )
  }

  /// RewardsByOwner queries Pot rewards by a given beneficiary address.
  ///
  /// - Parameters:
  ///   - request: Request to send to RewardsByWallet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rewardsByWallet(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryRewardsByWalletRequest, Stratos_Pot_V1_QueryRewardsByWalletResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByWallet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByWalletInterceptors() ?? []
    )
  }

  /// RewardsByWalletAndEpoch queries Pot rewards by a given beneficiary address at the specific epoch.
  ///
  /// - Parameters:
  ///   - request: Request to send to RewardsByWalletAndEpoch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rewardsByWalletAndEpoch(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest, Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByWalletAndEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByWalletAndEpochInterceptors() ?? []
    )
  }

  /// SlashingByOwner queries Pot slashing by owner wallet address.
  ///
  /// - Parameters:
  ///   - request: Request to send to SlashingByOwner.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func slashingByOwner(
    _ request: Stratos_Pot_V1_QuerySlashingByOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QuerySlashingByOwnerRequest, Stratos_Pot_V1_QuerySlashingByOwnerResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.slashingByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSlashingByOwnerInterceptors() ?? []
    )
  }

  /// Params queries POT module Params info.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Stratos_Pot_V1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryParamsRequest, Stratos_Pot_V1_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  /// Unary call to TotalMinedToken
  ///
  /// - Parameters:
  ///   - request: Request to send to TotalMinedToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func totalMinedToken(
    _ request: Stratos_Pot_V1_QueryTotalMinedTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryTotalMinedTokenRequest, Stratos_Pot_V1_QueryTotalMinedTokenResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.totalMinedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalMinedTokenInterceptors() ?? []
    )
  }

  /// Unary call to CirculationSupply
  ///
  /// - Parameters:
  ///   - request: Request to send to CirculationSupply.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func circulationSupply(
    _ request: Stratos_Pot_V1_QueryCirculationSupplyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryCirculationSupplyRequest, Stratos_Pot_V1_QueryCirculationSupplyResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.circulationSupply.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCirculationSupplyInterceptors() ?? []
    )
  }

  /// Unary call to TotalRewardByEpoch
  ///
  /// - Parameters:
  ///   - request: Request to send to TotalRewardByEpoch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func totalRewardByEpoch(
    _ request: Stratos_Pot_V1_QueryTotalRewardByEpochRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryTotalRewardByEpochRequest, Stratos_Pot_V1_QueryTotalRewardByEpochResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.totalRewardByEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalRewardByEpochInterceptors() ?? []
    )
  }

  /// Unary call to Metrics
  ///
  /// - Parameters:
  ///   - request: Request to send to Metrics.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func metrics(
    _ request: Stratos_Pot_V1_QueryMetricsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Stratos_Pot_V1_QueryMetricsRequest, Stratos_Pot_V1_QueryMetricsResponse> {
    return self.makeUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.metrics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMetricsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Stratos_Pot_V1_QueryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Stratos_Pot_V1_QueryNIOClient")
internal final class Stratos_Pot_V1_QueryClient: Stratos_Pot_V1_QueryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the stratos.pot.v1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Stratos_Pot_V1_QueryNIOClient: Stratos_Pot_V1_QueryClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the stratos.pot.v1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Query defines the gRPC querier service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stratos_Pot_V1_QueryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol? { get }

  func makeVolumeReportCall(
    _ request: Stratos_Pot_V1_QueryVolumeReportRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryVolumeReportRequest, Stratos_Pot_V1_QueryVolumeReportResponse>

  func makeRewardsByEpochCall(
    _ request: Stratos_Pot_V1_QueryRewardsByEpochRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryRewardsByEpochRequest, Stratos_Pot_V1_QueryRewardsByEpochResponse>

  func makeRewardsByWalletCall(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryRewardsByWalletRequest, Stratos_Pot_V1_QueryRewardsByWalletResponse>

  func makeRewardsByWalletAndEpochCall(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest, Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse>

  func makeSlashingByOwnerCall(
    _ request: Stratos_Pot_V1_QuerySlashingByOwnerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QuerySlashingByOwnerRequest, Stratos_Pot_V1_QuerySlashingByOwnerResponse>

  func makeParamsCall(
    _ request: Stratos_Pot_V1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryParamsRequest, Stratos_Pot_V1_QueryParamsResponse>

  func makeTotalMinedTokenCall(
    _ request: Stratos_Pot_V1_QueryTotalMinedTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryTotalMinedTokenRequest, Stratos_Pot_V1_QueryTotalMinedTokenResponse>

  func makeCirculationSupplyCall(
    _ request: Stratos_Pot_V1_QueryCirculationSupplyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryCirculationSupplyRequest, Stratos_Pot_V1_QueryCirculationSupplyResponse>

  func makeTotalRewardByEpochCall(
    _ request: Stratos_Pot_V1_QueryTotalRewardByEpochRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryTotalRewardByEpochRequest, Stratos_Pot_V1_QueryTotalRewardByEpochResponse>

  func makeMetricsCall(
    _ request: Stratos_Pot_V1_QueryMetricsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryMetricsRequest, Stratos_Pot_V1_QueryMetricsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stratos_Pot_V1_QueryAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stratos_Pot_V1_QueryClientMetadata.serviceDescriptor
  }

  internal var interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeVolumeReportCall(
    _ request: Stratos_Pot_V1_QueryVolumeReportRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryVolumeReportRequest, Stratos_Pot_V1_QueryVolumeReportResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.volumeReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVolumeReportInterceptors() ?? []
    )
  }

  internal func makeRewardsByEpochCall(
    _ request: Stratos_Pot_V1_QueryRewardsByEpochRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryRewardsByEpochRequest, Stratos_Pot_V1_QueryRewardsByEpochResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByEpochInterceptors() ?? []
    )
  }

  internal func makeRewardsByWalletCall(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryRewardsByWalletRequest, Stratos_Pot_V1_QueryRewardsByWalletResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByWallet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByWalletInterceptors() ?? []
    )
  }

  internal func makeRewardsByWalletAndEpochCall(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest, Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByWalletAndEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByWalletAndEpochInterceptors() ?? []
    )
  }

  internal func makeSlashingByOwnerCall(
    _ request: Stratos_Pot_V1_QuerySlashingByOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QuerySlashingByOwnerRequest, Stratos_Pot_V1_QuerySlashingByOwnerResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.slashingByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSlashingByOwnerInterceptors() ?? []
    )
  }

  internal func makeParamsCall(
    _ request: Stratos_Pot_V1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryParamsRequest, Stratos_Pot_V1_QueryParamsResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func makeTotalMinedTokenCall(
    _ request: Stratos_Pot_V1_QueryTotalMinedTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryTotalMinedTokenRequest, Stratos_Pot_V1_QueryTotalMinedTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.totalMinedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalMinedTokenInterceptors() ?? []
    )
  }

  internal func makeCirculationSupplyCall(
    _ request: Stratos_Pot_V1_QueryCirculationSupplyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryCirculationSupplyRequest, Stratos_Pot_V1_QueryCirculationSupplyResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.circulationSupply.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCirculationSupplyInterceptors() ?? []
    )
  }

  internal func makeTotalRewardByEpochCall(
    _ request: Stratos_Pot_V1_QueryTotalRewardByEpochRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryTotalRewardByEpochRequest, Stratos_Pot_V1_QueryTotalRewardByEpochResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.totalRewardByEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalRewardByEpochInterceptors() ?? []
    )
  }

  internal func makeMetricsCall(
    _ request: Stratos_Pot_V1_QueryMetricsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Stratos_Pot_V1_QueryMetricsRequest, Stratos_Pot_V1_QueryMetricsResponse> {
    return self.makeAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.metrics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMetricsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stratos_Pot_V1_QueryAsyncClientProtocol {
  internal func volumeReport(
    _ request: Stratos_Pot_V1_QueryVolumeReportRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryVolumeReportResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.volumeReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVolumeReportInterceptors() ?? []
    )
  }

  internal func rewardsByEpoch(
    _ request: Stratos_Pot_V1_QueryRewardsByEpochRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryRewardsByEpochResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByEpochInterceptors() ?? []
    )
  }

  internal func rewardsByWallet(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryRewardsByWalletResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByWallet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByWalletInterceptors() ?? []
    )
  }

  internal func rewardsByWalletAndEpoch(
    _ request: Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByWalletAndEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRewardsByWalletAndEpochInterceptors() ?? []
    )
  }

  internal func slashingByOwner(
    _ request: Stratos_Pot_V1_QuerySlashingByOwnerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QuerySlashingByOwnerResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.slashingByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSlashingByOwnerInterceptors() ?? []
    )
  }

  internal func params(
    _ request: Stratos_Pot_V1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryParamsResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.params.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }

  internal func totalMinedToken(
    _ request: Stratos_Pot_V1_QueryTotalMinedTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryTotalMinedTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.totalMinedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalMinedTokenInterceptors() ?? []
    )
  }

  internal func circulationSupply(
    _ request: Stratos_Pot_V1_QueryCirculationSupplyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryCirculationSupplyResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.circulationSupply.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCirculationSupplyInterceptors() ?? []
    )
  }

  internal func totalRewardByEpoch(
    _ request: Stratos_Pot_V1_QueryTotalRewardByEpochRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryTotalRewardByEpochResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.totalRewardByEpoch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTotalRewardByEpochInterceptors() ?? []
    )
  }

  internal func metrics(
    _ request: Stratos_Pot_V1_QueryMetricsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Stratos_Pot_V1_QueryMetricsResponse {
    return try await self.performAsyncUnaryCall(
      path: Stratos_Pot_V1_QueryClientMetadata.Methods.metrics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMetricsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Stratos_Pot_V1_QueryAsyncClient: Stratos_Pot_V1_QueryAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Stratos_Pot_V1_QueryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'volumeReport'.
  func makeVolumeReportInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryVolumeReportRequest, Stratos_Pot_V1_QueryVolumeReportResponse>]

  /// - Returns: Interceptors to use when invoking 'rewardsByEpoch'.
  func makeRewardsByEpochInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryRewardsByEpochRequest, Stratos_Pot_V1_QueryRewardsByEpochResponse>]

  /// - Returns: Interceptors to use when invoking 'rewardsByWallet'.
  func makeRewardsByWalletInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryRewardsByWalletRequest, Stratos_Pot_V1_QueryRewardsByWalletResponse>]

  /// - Returns: Interceptors to use when invoking 'rewardsByWalletAndEpoch'.
  func makeRewardsByWalletAndEpochInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest, Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse>]

  /// - Returns: Interceptors to use when invoking 'slashingByOwner'.
  func makeSlashingByOwnerInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QuerySlashingByOwnerRequest, Stratos_Pot_V1_QuerySlashingByOwnerResponse>]

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryParamsRequest, Stratos_Pot_V1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when invoking 'totalMinedToken'.
  func makeTotalMinedTokenInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryTotalMinedTokenRequest, Stratos_Pot_V1_QueryTotalMinedTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'circulationSupply'.
  func makeCirculationSupplyInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryCirculationSupplyRequest, Stratos_Pot_V1_QueryCirculationSupplyResponse>]

  /// - Returns: Interceptors to use when invoking 'totalRewardByEpoch'.
  func makeTotalRewardByEpochInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryTotalRewardByEpochRequest, Stratos_Pot_V1_QueryTotalRewardByEpochResponse>]

  /// - Returns: Interceptors to use when invoking 'metrics'.
  func makeMetricsInterceptors() -> [ClientInterceptor<Stratos_Pot_V1_QueryMetricsRequest, Stratos_Pot_V1_QueryMetricsResponse>]
}

internal enum Stratos_Pot_V1_QueryClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "stratos.pot.v1.Query",
    methods: [
      Stratos_Pot_V1_QueryClientMetadata.Methods.volumeReport,
      Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByEpoch,
      Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByWallet,
      Stratos_Pot_V1_QueryClientMetadata.Methods.rewardsByWalletAndEpoch,
      Stratos_Pot_V1_QueryClientMetadata.Methods.slashingByOwner,
      Stratos_Pot_V1_QueryClientMetadata.Methods.params,
      Stratos_Pot_V1_QueryClientMetadata.Methods.totalMinedToken,
      Stratos_Pot_V1_QueryClientMetadata.Methods.circulationSupply,
      Stratos_Pot_V1_QueryClientMetadata.Methods.totalRewardByEpoch,
      Stratos_Pot_V1_QueryClientMetadata.Methods.metrics,
    ]
  )

  internal enum Methods {
    internal static let volumeReport = GRPCMethodDescriptor(
      name: "VolumeReport",
      path: "/stratos.pot.v1.Query/VolumeReport",
      type: GRPCCallType.unary
    )

    internal static let rewardsByEpoch = GRPCMethodDescriptor(
      name: "RewardsByEpoch",
      path: "/stratos.pot.v1.Query/RewardsByEpoch",
      type: GRPCCallType.unary
    )

    internal static let rewardsByWallet = GRPCMethodDescriptor(
      name: "RewardsByWallet",
      path: "/stratos.pot.v1.Query/RewardsByWallet",
      type: GRPCCallType.unary
    )

    internal static let rewardsByWalletAndEpoch = GRPCMethodDescriptor(
      name: "RewardsByWalletAndEpoch",
      path: "/stratos.pot.v1.Query/RewardsByWalletAndEpoch",
      type: GRPCCallType.unary
    )

    internal static let slashingByOwner = GRPCMethodDescriptor(
      name: "SlashingByOwner",
      path: "/stratos.pot.v1.Query/SlashingByOwner",
      type: GRPCCallType.unary
    )

    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/stratos.pot.v1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let totalMinedToken = GRPCMethodDescriptor(
      name: "TotalMinedToken",
      path: "/stratos.pot.v1.Query/TotalMinedToken",
      type: GRPCCallType.unary
    )

    internal static let circulationSupply = GRPCMethodDescriptor(
      name: "CirculationSupply",
      path: "/stratos.pot.v1.Query/CirculationSupply",
      type: GRPCCallType.unary
    )

    internal static let totalRewardByEpoch = GRPCMethodDescriptor(
      name: "TotalRewardByEpoch",
      path: "/stratos.pot.v1.Query/TotalRewardByEpoch",
      type: GRPCCallType.unary
    )

    internal static let metrics = GRPCMethodDescriptor(
      name: "Metrics",
      path: "/stratos.pot.v1.Query/Metrics",
      type: GRPCCallType.unary
    )
  }
}

/// Query defines the gRPC querier service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Stratos_Pot_V1_QueryProvider: CallHandlerProvider {
  var interceptors: Stratos_Pot_V1_QueryServerInterceptorFactoryProtocol? { get }

  /// VolumeReport queries VolumeReport info for given epoch.
  func volumeReport(request: Stratos_Pot_V1_QueryVolumeReportRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryVolumeReportResponse>

  /// RewardsByEpoch queries Pot rewards by a given epoch.
  func rewardsByEpoch(request: Stratos_Pot_V1_QueryRewardsByEpochRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryRewardsByEpochResponse>

  /// RewardsByOwner queries Pot rewards by a given beneficiary address.
  func rewardsByWallet(request: Stratos_Pot_V1_QueryRewardsByWalletRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryRewardsByWalletResponse>

  /// RewardsByWalletAndEpoch queries Pot rewards by a given beneficiary address at the specific epoch.
  func rewardsByWalletAndEpoch(request: Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse>

  /// SlashingByOwner queries Pot slashing by owner wallet address.
  func slashingByOwner(request: Stratos_Pot_V1_QuerySlashingByOwnerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QuerySlashingByOwnerResponse>

  /// Params queries POT module Params info.
  func params(request: Stratos_Pot_V1_QueryParamsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryParamsResponse>

  func totalMinedToken(request: Stratos_Pot_V1_QueryTotalMinedTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryTotalMinedTokenResponse>

  func circulationSupply(request: Stratos_Pot_V1_QueryCirculationSupplyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryCirculationSupplyResponse>

  func totalRewardByEpoch(request: Stratos_Pot_V1_QueryTotalRewardByEpochRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryTotalRewardByEpochResponse>

  func metrics(request: Stratos_Pot_V1_QueryMetricsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Stratos_Pot_V1_QueryMetricsResponse>
}

extension Stratos_Pot_V1_QueryProvider {
  internal var serviceName: Substring {
    return Stratos_Pot_V1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "VolumeReport":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryVolumeReportRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryVolumeReportResponse>(),
        interceptors: self.interceptors?.makeVolumeReportInterceptors() ?? [],
        userFunction: self.volumeReport(request:context:)
      )

    case "RewardsByEpoch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryRewardsByEpochRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryRewardsByEpochResponse>(),
        interceptors: self.interceptors?.makeRewardsByEpochInterceptors() ?? [],
        userFunction: self.rewardsByEpoch(request:context:)
      )

    case "RewardsByWallet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryRewardsByWalletRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryRewardsByWalletResponse>(),
        interceptors: self.interceptors?.makeRewardsByWalletInterceptors() ?? [],
        userFunction: self.rewardsByWallet(request:context:)
      )

    case "RewardsByWalletAndEpoch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse>(),
        interceptors: self.interceptors?.makeRewardsByWalletAndEpochInterceptors() ?? [],
        userFunction: self.rewardsByWalletAndEpoch(request:context:)
      )

    case "SlashingByOwner":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QuerySlashingByOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QuerySlashingByOwnerResponse>(),
        interceptors: self.interceptors?.makeSlashingByOwnerInterceptors() ?? [],
        userFunction: self.slashingByOwner(request:context:)
      )

    case "Params":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        userFunction: self.params(request:context:)
      )

    case "TotalMinedToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryTotalMinedTokenRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryTotalMinedTokenResponse>(),
        interceptors: self.interceptors?.makeTotalMinedTokenInterceptors() ?? [],
        userFunction: self.totalMinedToken(request:context:)
      )

    case "CirculationSupply":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryCirculationSupplyRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryCirculationSupplyResponse>(),
        interceptors: self.interceptors?.makeCirculationSupplyInterceptors() ?? [],
        userFunction: self.circulationSupply(request:context:)
      )

    case "TotalRewardByEpoch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryTotalRewardByEpochRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryTotalRewardByEpochResponse>(),
        interceptors: self.interceptors?.makeTotalRewardByEpochInterceptors() ?? [],
        userFunction: self.totalRewardByEpoch(request:context:)
      )

    case "Metrics":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryMetricsRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryMetricsResponse>(),
        interceptors: self.interceptors?.makeMetricsInterceptors() ?? [],
        userFunction: self.metrics(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Query defines the gRPC querier service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Stratos_Pot_V1_QueryAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Stratos_Pot_V1_QueryServerInterceptorFactoryProtocol? { get }

  /// VolumeReport queries VolumeReport info for given epoch.
  @Sendable func volumeReport(
    request: Stratos_Pot_V1_QueryVolumeReportRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryVolumeReportResponse

  /// RewardsByEpoch queries Pot rewards by a given epoch.
  @Sendable func rewardsByEpoch(
    request: Stratos_Pot_V1_QueryRewardsByEpochRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryRewardsByEpochResponse

  /// RewardsByOwner queries Pot rewards by a given beneficiary address.
  @Sendable func rewardsByWallet(
    request: Stratos_Pot_V1_QueryRewardsByWalletRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryRewardsByWalletResponse

  /// RewardsByWalletAndEpoch queries Pot rewards by a given beneficiary address at the specific epoch.
  @Sendable func rewardsByWalletAndEpoch(
    request: Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse

  /// SlashingByOwner queries Pot slashing by owner wallet address.
  @Sendable func slashingByOwner(
    request: Stratos_Pot_V1_QuerySlashingByOwnerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QuerySlashingByOwnerResponse

  /// Params queries POT module Params info.
  @Sendable func params(
    request: Stratos_Pot_V1_QueryParamsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryParamsResponse

  @Sendable func totalMinedToken(
    request: Stratos_Pot_V1_QueryTotalMinedTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryTotalMinedTokenResponse

  @Sendable func circulationSupply(
    request: Stratos_Pot_V1_QueryCirculationSupplyRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryCirculationSupplyResponse

  @Sendable func totalRewardByEpoch(
    request: Stratos_Pot_V1_QueryTotalRewardByEpochRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryTotalRewardByEpochResponse

  @Sendable func metrics(
    request: Stratos_Pot_V1_QueryMetricsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Stratos_Pot_V1_QueryMetricsResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Stratos_Pot_V1_QueryAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Stratos_Pot_V1_QueryServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Stratos_Pot_V1_QueryServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Stratos_Pot_V1_QueryServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "VolumeReport":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryVolumeReportRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryVolumeReportResponse>(),
        interceptors: self.interceptors?.makeVolumeReportInterceptors() ?? [],
        wrapping: self.volumeReport(request:context:)
      )

    case "RewardsByEpoch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryRewardsByEpochRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryRewardsByEpochResponse>(),
        interceptors: self.interceptors?.makeRewardsByEpochInterceptors() ?? [],
        wrapping: self.rewardsByEpoch(request:context:)
      )

    case "RewardsByWallet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryRewardsByWalletRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryRewardsByWalletResponse>(),
        interceptors: self.interceptors?.makeRewardsByWalletInterceptors() ?? [],
        wrapping: self.rewardsByWallet(request:context:)
      )

    case "RewardsByWalletAndEpoch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse>(),
        interceptors: self.interceptors?.makeRewardsByWalletAndEpochInterceptors() ?? [],
        wrapping: self.rewardsByWalletAndEpoch(request:context:)
      )

    case "SlashingByOwner":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QuerySlashingByOwnerRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QuerySlashingByOwnerResponse>(),
        interceptors: self.interceptors?.makeSlashingByOwnerInterceptors() ?? [],
        wrapping: self.slashingByOwner(request:context:)
      )

    case "Params":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryParamsRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryParamsResponse>(),
        interceptors: self.interceptors?.makeParamsInterceptors() ?? [],
        wrapping: self.params(request:context:)
      )

    case "TotalMinedToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryTotalMinedTokenRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryTotalMinedTokenResponse>(),
        interceptors: self.interceptors?.makeTotalMinedTokenInterceptors() ?? [],
        wrapping: self.totalMinedToken(request:context:)
      )

    case "CirculationSupply":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryCirculationSupplyRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryCirculationSupplyResponse>(),
        interceptors: self.interceptors?.makeCirculationSupplyInterceptors() ?? [],
        wrapping: self.circulationSupply(request:context:)
      )

    case "TotalRewardByEpoch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryTotalRewardByEpochRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryTotalRewardByEpochResponse>(),
        interceptors: self.interceptors?.makeTotalRewardByEpochInterceptors() ?? [],
        wrapping: self.totalRewardByEpoch(request:context:)
      )

    case "Metrics":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Stratos_Pot_V1_QueryMetricsRequest>(),
        responseSerializer: ProtobufSerializer<Stratos_Pot_V1_QueryMetricsResponse>(),
        interceptors: self.interceptors?.makeMetricsInterceptors() ?? [],
        wrapping: self.metrics(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Stratos_Pot_V1_QueryServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'volumeReport'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeVolumeReportInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryVolumeReportRequest, Stratos_Pot_V1_QueryVolumeReportResponse>]

  /// - Returns: Interceptors to use when handling 'rewardsByEpoch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRewardsByEpochInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryRewardsByEpochRequest, Stratos_Pot_V1_QueryRewardsByEpochResponse>]

  /// - Returns: Interceptors to use when handling 'rewardsByWallet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRewardsByWalletInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryRewardsByWalletRequest, Stratos_Pot_V1_QueryRewardsByWalletResponse>]

  /// - Returns: Interceptors to use when handling 'rewardsByWalletAndEpoch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRewardsByWalletAndEpochInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryRewardsByWalletAndEpochRequest, Stratos_Pot_V1_QueryRewardsByWalletAndEpochResponse>]

  /// - Returns: Interceptors to use when handling 'slashingByOwner'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSlashingByOwnerInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QuerySlashingByOwnerRequest, Stratos_Pot_V1_QuerySlashingByOwnerResponse>]

  /// - Returns: Interceptors to use when handling 'params'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeParamsInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryParamsRequest, Stratos_Pot_V1_QueryParamsResponse>]

  /// - Returns: Interceptors to use when handling 'totalMinedToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTotalMinedTokenInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryTotalMinedTokenRequest, Stratos_Pot_V1_QueryTotalMinedTokenResponse>]

  /// - Returns: Interceptors to use when handling 'circulationSupply'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCirculationSupplyInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryCirculationSupplyRequest, Stratos_Pot_V1_QueryCirculationSupplyResponse>]

  /// - Returns: Interceptors to use when handling 'totalRewardByEpoch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTotalRewardByEpochInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryTotalRewardByEpochRequest, Stratos_Pot_V1_QueryTotalRewardByEpochResponse>]

  /// - Returns: Interceptors to use when handling 'metrics'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMetricsInterceptors() -> [ServerInterceptor<Stratos_Pot_V1_QueryMetricsRequest, Stratos_Pot_V1_QueryMetricsResponse>]
}

internal enum Stratos_Pot_V1_QueryServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Query",
    fullName: "stratos.pot.v1.Query",
    methods: [
      Stratos_Pot_V1_QueryServerMetadata.Methods.volumeReport,
      Stratos_Pot_V1_QueryServerMetadata.Methods.rewardsByEpoch,
      Stratos_Pot_V1_QueryServerMetadata.Methods.rewardsByWallet,
      Stratos_Pot_V1_QueryServerMetadata.Methods.rewardsByWalletAndEpoch,
      Stratos_Pot_V1_QueryServerMetadata.Methods.slashingByOwner,
      Stratos_Pot_V1_QueryServerMetadata.Methods.params,
      Stratos_Pot_V1_QueryServerMetadata.Methods.totalMinedToken,
      Stratos_Pot_V1_QueryServerMetadata.Methods.circulationSupply,
      Stratos_Pot_V1_QueryServerMetadata.Methods.totalRewardByEpoch,
      Stratos_Pot_V1_QueryServerMetadata.Methods.metrics,
    ]
  )

  internal enum Methods {
    internal static let volumeReport = GRPCMethodDescriptor(
      name: "VolumeReport",
      path: "/stratos.pot.v1.Query/VolumeReport",
      type: GRPCCallType.unary
    )

    internal static let rewardsByEpoch = GRPCMethodDescriptor(
      name: "RewardsByEpoch",
      path: "/stratos.pot.v1.Query/RewardsByEpoch",
      type: GRPCCallType.unary
    )

    internal static let rewardsByWallet = GRPCMethodDescriptor(
      name: "RewardsByWallet",
      path: "/stratos.pot.v1.Query/RewardsByWallet",
      type: GRPCCallType.unary
    )

    internal static let rewardsByWalletAndEpoch = GRPCMethodDescriptor(
      name: "RewardsByWalletAndEpoch",
      path: "/stratos.pot.v1.Query/RewardsByWalletAndEpoch",
      type: GRPCCallType.unary
    )

    internal static let slashingByOwner = GRPCMethodDescriptor(
      name: "SlashingByOwner",
      path: "/stratos.pot.v1.Query/SlashingByOwner",
      type: GRPCCallType.unary
    )

    internal static let params = GRPCMethodDescriptor(
      name: "Params",
      path: "/stratos.pot.v1.Query/Params",
      type: GRPCCallType.unary
    )

    internal static let totalMinedToken = GRPCMethodDescriptor(
      name: "TotalMinedToken",
      path: "/stratos.pot.v1.Query/TotalMinedToken",
      type: GRPCCallType.unary
    )

    internal static let circulationSupply = GRPCMethodDescriptor(
      name: "CirculationSupply",
      path: "/stratos.pot.v1.Query/CirculationSupply",
      type: GRPCCallType.unary
    )

    internal static let totalRewardByEpoch = GRPCMethodDescriptor(
      name: "TotalRewardByEpoch",
      path: "/stratos.pot.v1.Query/TotalRewardByEpoch",
      type: GRPCCallType.unary
    )

    internal static let metrics = GRPCMethodDescriptor(
      name: "Metrics",
      path: "/stratos.pot.v1.Query/Metrics",
      type: GRPCCallType.unary
    )
  }
}
